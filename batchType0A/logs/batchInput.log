2023-04-08 17:36:50,231 ERROR org.springframework.boot.SpringApplication [main] Application run failed
java.lang.IllegalStateException: java.lang.IllegalStateException: Logback configuration error detected: 
ERROR in ch.qos.logback.classic.pattern.LoggerConverter@21d5c1a0 - failed to parse integer string [1.] java.lang.NumberFormatException: For input string: "1."
	at org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:347)
	at org.springframework.boot.context.logging.LoggingApplicationListener.initialize(LoggingApplicationListener.java:298)
	at org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEnvironmentPreparedEvent(LoggingApplicationListener.java:246)
	at org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEvent(LoggingApplicationListener.java:223)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:131)
	at org.springframework.boot.context.event.EventPublishingRunListener.multicastInitialEvent(EventPublishingRunListener.java:136)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:81)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$environmentPrepared$2(SpringApplicationRunListeners.java:64)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:63)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:305)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1304)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1293)
	at com.yuripe.batchType0A.BatchType0AApplication.main(BatchType0AApplication.java:14)
Caused by: java.lang.IllegalStateException: Logback configuration error detected: 
ERROR in ch.qos.logback.classic.pattern.LoggerConverter@21d5c1a0 - failed to parse integer string [1.] java.lang.NumberFormatException: For input string: "1."
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.reportConfigurationErrorsIfNecessary(LogbackLoggingSystem.java:260)
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.loadConfiguration(LogbackLoggingSystem.java:247)
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.reinitialize(LogbackLoggingSystem.java:319)
	at org.springframework.boot.logging.AbstractLoggingSystem.initializeWithConventions(AbstractLoggingSystem.java:73)
	at org.springframework.boot.logging.AbstractLoggingSystem.initialize(AbstractLoggingSystem.java:60)
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.initialize(LogbackLoggingSystem.java:187)
	at org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:332)
	... 19 common frames omitted
2023-04-08 17:37:30,199 ERROR org.springframework.boot.SpringApplication [main] Application run failed
java.lang.IllegalStateException: java.lang.IllegalStateException: Logback configuration error detected: 
ERROR in ch.qos.logback.classic.pattern.LoggerConverter@21d5c1a0 - failed to parse integer string [1.] java.lang.NumberFormatException: For input string: "1."
	at org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:347)
	at org.springframework.boot.context.logging.LoggingApplicationListener.initialize(LoggingApplicationListener.java:298)
	at org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEnvironmentPreparedEvent(LoggingApplicationListener.java:246)
	at org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEvent(LoggingApplicationListener.java:223)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:131)
	at org.springframework.boot.context.event.EventPublishingRunListener.multicastInitialEvent(EventPublishingRunListener.java:136)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:81)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$environmentPrepared$2(SpringApplicationRunListeners.java:64)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:63)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:305)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1304)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1293)
	at com.yuripe.batchType0A.BatchType0AApplication.main(BatchType0AApplication.java:14)
Caused by: java.lang.IllegalStateException: Logback configuration error detected: 
ERROR in ch.qos.logback.classic.pattern.LoggerConverter@21d5c1a0 - failed to parse integer string [1.] java.lang.NumberFormatException: For input string: "1."
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.reportConfigurationErrorsIfNecessary(LogbackLoggingSystem.java:260)
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.loadConfiguration(LogbackLoggingSystem.java:247)
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.reinitialize(LogbackLoggingSystem.java:319)
	at org.springframework.boot.logging.AbstractLoggingSystem.initializeWithConventions(AbstractLoggingSystem.java:73)
	at org.springframework.boot.logging.AbstractLoggingSystem.initialize(AbstractLoggingSystem.java:60)
	at org.springframework.boot.logging.logback.LogbackLoggingSystem.initialize(LogbackLoggingSystem.java:187)
	at org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:332)
	... 19 common frames omitted
2023-04-08 17:37:59,559 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2023-04-08 17:37:59,567 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@34cb0e49
2023-04-08 17:37:59,567 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@34cb0e49
2023-04-08 17:37:59,568 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@34cb0e49
2023-04-08 17:37:59,569 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@48b2dbc4
2023-04-08 17:37:59,569 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@48b2dbc4
2023-04-08 17:37:59,570 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2a667f44
2023-04-08 17:37:59,570 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2a667f44
2023-04-08 17:37:59,570 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@53ba7997
2023-04-08 17:37:59,570 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@53ba7997
2023-04-08 17:37:59,570 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.BasicTypeReference@3f6f9cef
2023-04-08 17:37:59,570 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.BasicTypeReference@3f6f9cef
2023-04-08 17:37:59,570 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3f6f9cef
2023-04-08 17:37:59,570 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BasicTypeReference@61dd1c3d
2023-04-08 17:37:59,570 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@61dd1c3d
2023-04-08 17:37:59,571 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BasicTypeReference@61dd1c3d
2023-04-08 17:37:59,571 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3b65084e
2023-04-08 17:37:59,571 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3b65084e
2023-04-08 17:37:59,571 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@3b65084e
2023-04-08 17:37:59,571 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@3b65084e
2023-04-08 17:37:59,571 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.BasicTypeReference@32d0d7eb
2023-04-08 17:37:59,571 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BasicTypeReference@cae2a97
2023-04-08 17:37:59,571 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@cae2a97
2023-04-08 17:37:59,571 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7d12429
2023-04-08 17:37:59,571 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@14656be5
2023-04-08 17:37:59,571 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.BasicTypeReference@20be890d
2023-04-08 17:37:59,571 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.BasicTypeReference@20be890d
2023-04-08 17:37:59,572 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@20be890d
2023-04-08 17:37:59,572 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.BasicTypeReference@5db9f51f
2023-04-08 17:37:59,572 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.BasicTypeReference@5db9f51f
2023-04-08 17:37:59,572 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5db9f51f
2023-04-08 17:37:59,572 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.BasicTypeReference@534762ed
2023-04-08 17:37:59,572 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.BasicTypeReference@534762ed
2023-04-08 17:37:59,572 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@534762ed
2023-04-08 17:37:59,572 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.BasicTypeReference@6c421123
2023-04-08 17:37:59,572 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.BasicTypeReference@6c421123
2023-04-08 17:37:59,572 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6c421123
2023-04-08 17:37:59,572 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.BasicTypeReference@38e00b47
2023-04-08 17:37:59,572 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.BasicTypeReference@38e00b47
2023-04-08 17:37:59,572 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@38e00b47
2023-04-08 17:37:59,572 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2a631049
2023-04-08 17:37:59,573 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2a631049
2023-04-08 17:37:59,573 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@425b5fe2
2023-04-08 17:37:59,573 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@425b5fe2
2023-04-08 17:37:59,573 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.BasicTypeReference@3eec8583
2023-04-08 17:37:59,573 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.BasicTypeReference@3eec8583
2023-04-08 17:37:59,573 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3eec8583
2023-04-08 17:37:59,573 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@66e1b2a
2023-04-08 17:37:59,573 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.BasicTypeReference@343db2f6
2023-04-08 17:37:59,573 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@343db2f6
2023-04-08 17:37:59,573 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2c815fdc
2023-04-08 17:37:59,573 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.BasicTypeReference@769b0752
2023-04-08 17:37:59,574 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@769b0752
2023-04-08 17:37:59,574 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.BasicTypeReference@769b0752
2023-04-08 17:37:59,574 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@dae5e0
2023-04-08 17:37:59,574 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@dae5e0
2023-04-08 17:37:59,574 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@dae5e0
2023-04-08 17:37:59,574 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.BasicTypeReference@59a94d0f
2023-04-08 17:37:59,574 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7ff09659
2023-04-08 17:37:59,574 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.BasicTypeReference@517fbf62
2023-04-08 17:37:59,574 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@517fbf62
2023-04-08 17:37:59,574 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@65db548
2023-04-08 17:37:59,574 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@65db548
2023-04-08 17:37:59,574 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@150f41b9
2023-04-08 17:37:59,575 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6e364f1f
2023-04-08 17:37:59,575 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@429e7914
2023-04-08 17:37:59,575 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@298263fa
2023-04-08 17:37:59,575 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@466fedfa
2023-04-08 17:37:59,575 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1a7d0c9f
2023-04-08 17:37:59,575 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2b1a901d
2023-04-08 17:37:59,575 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2b1a901d
2023-04-08 17:37:59,575 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@11bdab37
2023-04-08 17:37:59,575 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@11bdab37
2023-04-08 17:37:59,575 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@280484c7
2023-04-08 17:37:59,575 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@280484c7
2023-04-08 17:37:59,575 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5a6f6cac
2023-04-08 17:37:59,575 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5a6f6cac
2023-04-08 17:37:59,575 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@258a8584
2023-04-08 17:37:59,575 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@258a8584
2023-04-08 17:37:59,575 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@59127611
2023-04-08 17:37:59,575 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@553ce348
2023-04-08 17:37:59,576 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7417ef4f
2023-04-08 17:37:59,576 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7417ef4f
2023-04-08 17:37:59,576 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5c0e2ec
2023-04-08 17:37:59,576 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5c0e2ec
2023-04-08 17:37:59,576 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4fa8bebb
2023-04-08 17:37:59,576 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7d3c22a5
2023-04-08 17:37:59,576 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.BasicTypeReference@369ad7da
2023-04-08 17:37:59,576 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@369ad7da
2023-04-08 17:37:59,576 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.BasicTypeReference@344f9467
2023-04-08 17:37:59,576 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@344f9467
2023-04-08 17:37:59,576 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3e98b933
2023-04-08 17:37:59,576 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3e98b933
2023-04-08 17:37:59,576 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3e98b933
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@222d9d4f
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@222d9d4f
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@222d9d4f
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4269aad7
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@a4df251
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration instant -> org.hibernate.type.BasicTypeReference@71e7830a
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@71e7830a
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3feebf9c
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3feebf9c
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3feebf9c
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@305e95a4
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@55e42684
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.BasicTypeReference@18d610e1
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@18d610e1
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.BasicTypeReference@528e5e38
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@528e5e38
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@528e5e38
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.BasicTypeReference@16391278
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@16391278
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@621dc63d
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@621dc63d
2023-04-08 17:37:59,577 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4ae49387
2023-04-08 17:37:59,579 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4ae49387
2023-04-08 17:37:59,579 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6abb7b7d
2023-04-08 17:37:59,579 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6abb7b7d
2023-04-08 17:37:59,579 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.BasicTypeReference@34cf0e80
2023-04-08 17:37:59,579 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@34cf0e80
2023-04-08 17:37:59,579 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@38ef1a0a
2023-04-08 17:37:59,582 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@280ecc33
2023-04-08 17:37:59,582 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@280ecc33
2023-04-08 17:37:59,583 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.JavaObjectType@7d537616
2023-04-08 17:37:59,583 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7d537616
2023-04-08 17:37:59,583 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration null -> org.hibernate.type.NullType@29f3185c
2023-04-08 17:37:59,584 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@74bbc273
2023-04-08 17:37:59,584 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@370a8b6e
2023-04-08 17:37:59,584 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@118fbaf0
2023-04-08 17:37:59,584 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@208f7165
2023-04-08 17:37:59,584 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@a0d875d
2023-04-08 17:37:59,584 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@693f2c89
2023-04-08 17:37:59,584 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@50b4364
2023-04-08 17:37:59,584 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5e541ef9
2023-04-08 17:37:59,621 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@35ab4260) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76134b9b)
2023-04-08 17:37:59,621 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@38667005) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ee64b53)
2023-04-08 17:37:59,621 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1131aead) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d126083)
2023-04-08 17:37:59,621 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76ffc17c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a8fb023)
2023-04-08 17:37:59,622 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@26d73519) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@48af5f38)
2023-04-08 17:37:59,622 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@40538370) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71a2df1)
2023-04-08 17:37:59,622 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@18faaff6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2a9e754e)
2023-04-08 17:37:59,622 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@760a2b6e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@20a9f5fb)
2023-04-08 17:37:59,622 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d617b07) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@340c57e0)
2023-04-08 17:37:59,622 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-04-08 17:37:59,622 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-04-08 17:37:59,623 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-04-08 17:37:59,623 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-04-08 17:37:59,623 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-04-08 17:37:59,624 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration null -> org.hibernate.type.NullType@7c8f047a
2023-04-08 17:37:59,624 DEBUG org.hibernate.type.BasicTypeRegistry [main] Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@29f3185c`
2023-04-08 17:37:59,626 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2023-04-08 17:37:59,626 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-04-08 17:37:59,627 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-04-08 17:37:59,627 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2023-04-08 17:37:59,627 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-04-08 17:37:59,627 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-04-08 17:37:59,627 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@698ac187] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4fea5ee0]
2023-04-08 17:37:59,798 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@698ac187] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6be422da]
2023-04-08 17:38:00,855 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6be422da] for TypeConfiguration
2023-04-08 18:07:51,399 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [RMI TCP Connection(39)-127.0.0.1] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6be422da] for TypeConfiguration
2023-04-08 18:07:51,400 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [RMI TCP Connection(39)-127.0.0.1] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2da13bbd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6be422da]
2023-04-08 18:43:20,880 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2023-04-08 18:43:20,888 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@553ce348
2023-04-08 18:43:20,888 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@553ce348
2023-04-08 18:43:20,888 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@553ce348
2023-04-08 18:43:20,888 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7417ef4f
2023-04-08 18:43:20,888 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7417ef4f
2023-04-08 18:43:20,890 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5c0e2ec
2023-04-08 18:43:20,890 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5c0e2ec
2023-04-08 18:43:20,890 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4fa8bebb
2023-04-08 18:43:20,890 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4fa8bebb
2023-04-08 18:43:20,890 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.BasicTypeReference@7d3c22a5
2023-04-08 18:43:20,890 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.BasicTypeReference@7d3c22a5
2023-04-08 18:43:20,890 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7d3c22a5
2023-04-08 18:43:20,890 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BasicTypeReference@369ad7da
2023-04-08 18:43:20,890 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@369ad7da
2023-04-08 18:43:20,891 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BasicTypeReference@369ad7da
2023-04-08 18:43:20,891 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@222d9d4f
2023-04-08 18:43:20,891 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@222d9d4f
2023-04-08 18:43:20,891 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@222d9d4f
2023-04-08 18:43:20,891 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@222d9d4f
2023-04-08 18:43:20,891 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.BasicTypeReference@4269aad7
2023-04-08 18:43:20,891 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BasicTypeReference@a4df251
2023-04-08 18:43:20,891 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@a4df251
2023-04-08 18:43:20,891 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@71e7830a
2023-04-08 18:43:20,891 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3feebf9c
2023-04-08 18:43:20,891 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.BasicTypeReference@305e95a4
2023-04-08 18:43:20,892 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.BasicTypeReference@305e95a4
2023-04-08 18:43:20,892 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@305e95a4
2023-04-08 18:43:20,892 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.BasicTypeReference@55e42684
2023-04-08 18:43:20,892 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.BasicTypeReference@55e42684
2023-04-08 18:43:20,892 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@55e42684
2023-04-08 18:43:20,892 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.BasicTypeReference@18d610e1
2023-04-08 18:43:20,892 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.BasicTypeReference@18d610e1
2023-04-08 18:43:20,892 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@18d610e1
2023-04-08 18:43:20,892 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.BasicTypeReference@528e5e38
2023-04-08 18:43:20,892 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.BasicTypeReference@528e5e38
2023-04-08 18:43:20,892 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@528e5e38
2023-04-08 18:43:20,892 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.BasicTypeReference@16391278
2023-04-08 18:43:20,892 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.BasicTypeReference@16391278
2023-04-08 18:43:20,892 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@16391278
2023-04-08 18:43:20,893 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@621dc63d
2023-04-08 18:43:20,893 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@621dc63d
2023-04-08 18:43:20,893 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4ae49387
2023-04-08 18:43:20,893 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4ae49387
2023-04-08 18:43:20,893 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.BasicTypeReference@6abb7b7d
2023-04-08 18:43:20,893 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.BasicTypeReference@6abb7b7d
2023-04-08 18:43:20,893 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6abb7b7d
2023-04-08 18:43:20,893 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@34cf0e80
2023-04-08 18:43:20,893 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.BasicTypeReference@38ef1a0a
2023-04-08 18:43:20,893 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@38ef1a0a
2023-04-08 18:43:20,893 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@56f9de3b
2023-04-08 18:43:20,893 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.BasicTypeReference@6728370a
2023-04-08 18:43:20,893 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6728370a
2023-04-08 18:43:20,893 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.BasicTypeReference@6728370a
2023-04-08 18:43:20,893 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2b5f8e61
2023-04-08 18:43:20,893 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@2b5f8e61
2023-04-08 18:43:20,893 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@2b5f8e61
2023-04-08 18:43:20,894 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.BasicTypeReference@6ba0ee4a
2023-04-08 18:43:20,894 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@73b0ed03
2023-04-08 18:43:20,894 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.BasicTypeReference@55061418
2023-04-08 18:43:20,894 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@55061418
2023-04-08 18:43:20,894 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@27db45f
2023-04-08 18:43:20,894 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@27db45f
2023-04-08 18:43:20,894 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6ec3d8e4
2023-04-08 18:43:20,894 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1aeff8ca
2023-04-08 18:43:20,894 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7f2c995b
2023-04-08 18:43:20,894 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@101c15ad
2023-04-08 18:43:20,894 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6068ebb2
2023-04-08 18:43:20,894 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5a466dd
2023-04-08 18:43:20,894 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1ed9d173
2023-04-08 18:43:20,894 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1ed9d173
2023-04-08 18:43:20,894 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6e981e78
2023-04-08 18:43:20,895 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6e981e78
2023-04-08 18:43:20,895 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@498a4d62
2023-04-08 18:43:20,895 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@498a4d62
2023-04-08 18:43:20,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6fbe4800
2023-04-08 18:43:20,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6fbe4800
2023-04-08 18:43:20,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3f3c5ecd
2023-04-08 18:43:20,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3f3c5ecd
2023-04-08 18:43:20,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1179fc8c
2023-04-08 18:43:20,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@a03529c
2023-04-08 18:43:20,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1760e594
2023-04-08 18:43:20,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1760e594
2023-04-08 18:43:20,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4af70b83
2023-04-08 18:43:20,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4af70b83
2023-04-08 18:43:20,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@143413cd
2023-04-08 18:43:20,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b32465
2023-04-08 18:43:20,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.BasicTypeReference@146f3d22
2023-04-08 18:43:20,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@146f3d22
2023-04-08 18:43:20,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.BasicTypeReference@66b6873f
2023-04-08 18:43:20,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@66b6873f
2023-04-08 18:43:20,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@52285a5f
2023-04-08 18:43:20,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@52285a5f
2023-04-08 18:43:20,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@52285a5f
2023-04-08 18:43:20,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4fa5cc73
2023-04-08 18:43:20,896 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4fa5cc73
2023-04-08 18:43:20,897 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4fa5cc73
2023-04-08 18:43:20,897 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@224e6e88
2023-04-08 18:43:20,897 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@70139a81
2023-04-08 18:43:20,897 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration instant -> org.hibernate.type.BasicTypeReference@60f9dc7e
2023-04-08 18:43:20,897 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@60f9dc7e
2023-04-08 18:43:20,897 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@15e5246
2023-04-08 18:43:20,897 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@15e5246
2023-04-08 18:43:20,897 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@15e5246
2023-04-08 18:43:20,897 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@503556cb
2023-04-08 18:43:20,897 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3c9e19de
2023-04-08 18:43:20,897 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.BasicTypeReference@12aa381f
2023-04-08 18:43:20,897 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@12aa381f
2023-04-08 18:43:20,897 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.BasicTypeReference@6115846e
2023-04-08 18:43:20,897 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6115846e
2023-04-08 18:43:20,897 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6115846e
2023-04-08 18:43:20,897 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.BasicTypeReference@1bec1589
2023-04-08 18:43:20,897 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1bec1589
2023-04-08 18:43:20,898 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@57f0bfc3
2023-04-08 18:43:20,898 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@57f0bfc3
2023-04-08 18:43:20,898 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@14590fe2
2023-04-08 18:43:20,898 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@14590fe2
2023-04-08 18:43:20,898 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5922cff3
2023-04-08 18:43:20,898 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5922cff3
2023-04-08 18:43:20,898 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.BasicTypeReference@2299d903
2023-04-08 18:43:20,898 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2299d903
2023-04-08 18:43:20,898 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@70c56434
2023-04-08 18:43:20,901 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1ba35152
2023-04-08 18:43:20,902 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1ba35152
2023-04-08 18:43:20,903 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.JavaObjectType@6851b296
2023-04-08 18:43:20,903 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6851b296
2023-04-08 18:43:20,903 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration null -> org.hibernate.type.NullType@2673487b
2023-04-08 18:43:20,903 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2d07aacc
2023-04-08 18:43:20,904 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@ff5d4f1
2023-04-08 18:43:20,904 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@194224ca
2023-04-08 18:43:20,904 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@254e9709
2023-04-08 18:43:20,904 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@350f18a6
2023-04-08 18:43:20,904 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@147c00aa
2023-04-08 18:43:20,904 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1c90029b
2023-04-08 18:43:20,904 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4db728df
2023-04-08 18:43:20,943 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ce7490a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4768b95c)
2023-04-08 18:43:20,943 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1530d0f2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7573c7b5)
2023-04-08 18:43:20,943 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73da7f08) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@717a8a76)
2023-04-08 18:43:20,943 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@62de73eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@97b5e6a)
2023-04-08 18:43:20,943 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29f95272) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c754401)
2023-04-08 18:43:20,943 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1da53f4f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e7eba9f)
2023-04-08 18:43:20,944 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2df71be0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b841713)
2023-04-08 18:43:20,944 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3fef1e6b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4fee14b)
2023-04-08 18:43:20,944 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@11c3d22f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a54638b)
2023-04-08 18:43:20,944 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-04-08 18:43:20,944 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-04-08 18:43:20,945 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-04-08 18:43:20,945 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-04-08 18:43:20,945 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-04-08 18:43:20,946 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration null -> org.hibernate.type.NullType@6630dd28
2023-04-08 18:43:20,946 DEBUG org.hibernate.type.BasicTypeRegistry [main] Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2673487b`
2023-04-08 18:43:20,948 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2023-04-08 18:43:20,948 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-04-08 18:43:20,948 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-04-08 18:43:20,948 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2023-04-08 18:43:20,949 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-04-08 18:43:20,949 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-04-08 18:43:20,949 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3a72e2e8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@42401b81]
2023-04-08 18:43:21,118 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3a72e2e8] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@65ff4b8c]
2023-04-08 18:43:22,080 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@65ff4b8c] for TypeConfiguration
2023-04-08 18:43:22,971 ERROR org.springframework.boot.SpringApplication [main] Application run failed
java.lang.IllegalStateException: Failed to execute ApplicationRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:763)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1304)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1293)
	at com.yuripe.batchType0A.BatchType0AApplication.main(BatchType0AApplication.java:14)
Caused by: org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [SELECT JOB_INSTANCE_ID, JOB_NAME from BATCH_JOB_INSTANCE where JOB_NAME = ? and JOB_KEY = ?]
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:101)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1538)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:667)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:713)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:744)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:757)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:815)
	at org.springframework.batch.core.repository.dao.JdbcJobInstanceDao.getJobInstance(JdbcJobInstanceDao.java:143)
	at org.springframework.batch.core.repository.support.SimpleJobRepository.isJobInstanceExists(SimpleJobRepository.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy2/jdk.proxy2.$Proxy102.isJobInstanceExists(Unknown Source)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.getNextJobParameters(JobLauncherApplicationRunner.java:206)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.execute(JobLauncherApplicationRunner.java:198)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.executeLocalJobs(JobLauncherApplicationRunner.java:178)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.launchJobFromProperties(JobLauncherApplicationRunner.java:166)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.run(JobLauncherApplicationRunner.java:161)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.run(JobLauncherApplicationRunner.java:156)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:760)
	... 5 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'normalize.BATCH_JOB_INSTANCE' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:972)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:722)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:651)
	... 31 common frames omitted
2023-04-08 18:43:22,991 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@65ff4b8c] for TypeConfiguration
2023-04-08 18:43:22,991 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@68c3aa38] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@65ff4b8c]
2023-04-08 18:45:45,714 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2023-04-08 18:45:45,722 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@370a8b6e
2023-04-08 18:45:45,722 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@370a8b6e
2023-04-08 18:45:45,723 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@370a8b6e
2023-04-08 18:45:45,724 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@118fbaf0
2023-04-08 18:45:45,725 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@118fbaf0
2023-04-08 18:45:45,725 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@208f7165
2023-04-08 18:45:45,725 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@208f7165
2023-04-08 18:45:45,725 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@a0d875d
2023-04-08 18:45:45,725 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@a0d875d
2023-04-08 18:45:45,725 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.BasicTypeReference@693f2c89
2023-04-08 18:45:45,725 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.BasicTypeReference@693f2c89
2023-04-08 18:45:45,725 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@693f2c89
2023-04-08 18:45:45,726 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BasicTypeReference@50b4364
2023-04-08 18:45:45,726 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@50b4364
2023-04-08 18:45:45,726 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BasicTypeReference@50b4364
2023-04-08 18:45:45,726 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@28ce75ec
2023-04-08 18:45:45,726 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@28ce75ec
2023-04-08 18:45:45,726 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@28ce75ec
2023-04-08 18:45:45,726 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@28ce75ec
2023-04-08 18:45:45,726 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.BasicTypeReference@778113f2
2023-04-08 18:45:45,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BasicTypeReference@9dc782d
2023-04-08 18:45:45,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@9dc782d
2023-04-08 18:45:45,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1ba35152
2023-04-08 18:45:45,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@401926df
2023-04-08 18:45:45,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.BasicTypeReference@3ff8a3ad
2023-04-08 18:45:45,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.BasicTypeReference@3ff8a3ad
2023-04-08 18:45:45,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3ff8a3ad
2023-04-08 18:45:45,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.BasicTypeReference@550fa96f
2023-04-08 18:45:45,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.BasicTypeReference@550fa96f
2023-04-08 18:45:45,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@550fa96f
2023-04-08 18:45:45,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.BasicTypeReference@54275b5d
2023-04-08 18:45:45,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.BasicTypeReference@54275b5d
2023-04-08 18:45:45,728 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@54275b5d
2023-04-08 18:45:45,728 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.BasicTypeReference@5d01b0d8
2023-04-08 18:45:45,728 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.BasicTypeReference@5d01b0d8
2023-04-08 18:45:45,728 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5d01b0d8
2023-04-08 18:45:45,728 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.BasicTypeReference@271e851e
2023-04-08 18:45:45,728 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.BasicTypeReference@271e851e
2023-04-08 18:45:45,728 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@271e851e
2023-04-08 18:45:45,728 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@ff21443
2023-04-08 18:45:45,728 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@ff21443
2023-04-08 18:45:45,728 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@61e14b53
2023-04-08 18:45:45,728 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@61e14b53
2023-04-08 18:45:45,728 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.BasicTypeReference@31b6b0c7
2023-04-08 18:45:45,728 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.BasicTypeReference@31b6b0c7
2023-04-08 18:45:45,728 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@31b6b0c7
2023-04-08 18:45:45,729 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6253e59a
2023-04-08 18:45:45,729 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.BasicTypeReference@7d1cb59f
2023-04-08 18:45:45,729 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7d1cb59f
2023-04-08 18:45:45,729 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@16ccd2bc
2023-04-08 18:45:45,729 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.BasicTypeReference@12f8682a
2023-04-08 18:45:45,729 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@12f8682a
2023-04-08 18:45:45,729 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.BasicTypeReference@12f8682a
2023-04-08 18:45:45,729 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6f7a20da
2023-04-08 18:45:45,729 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@6f7a20da
2023-04-08 18:45:45,730 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@6f7a20da
2023-04-08 18:45:45,730 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.BasicTypeReference@7752c0e7
2023-04-08 18:45:45,730 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@77ba583
2023-04-08 18:45:45,730 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.BasicTypeReference@5613247e
2023-04-08 18:45:45,730 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5613247e
2023-04-08 18:45:45,730 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6851b296
2023-04-08 18:45:45,730 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6851b296
2023-04-08 18:45:45,730 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@9e50283
2023-04-08 18:45:45,730 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5368e981
2023-04-08 18:45:45,730 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1c171746
2023-04-08 18:45:45,730 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@79b7c350
2023-04-08 18:45:45,730 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@586737ff
2023-04-08 18:45:45,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4cd7e993
2023-04-08 18:45:45,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@685e6a68
2023-04-08 18:45:45,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@685e6a68
2023-04-08 18:45:45,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2fb48970
2023-04-08 18:45:45,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2fb48970
2023-04-08 18:45:45,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4e8d9bb6
2023-04-08 18:45:45,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4e8d9bb6
2023-04-08 18:45:45,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3de56885
2023-04-08 18:45:45,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3de56885
2023-04-08 18:45:45,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2673487b
2023-04-08 18:45:45,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2673487b
2023-04-08 18:45:45,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2d07aacc
2023-04-08 18:45:45,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@ff5d4f1
2023-04-08 18:45:45,732 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@194224ca
2023-04-08 18:45:45,732 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@194224ca
2023-04-08 18:45:45,732 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@254e9709
2023-04-08 18:45:45,732 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@254e9709
2023-04-08 18:45:45,732 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@350f18a6
2023-04-08 18:45:45,732 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@147c00aa
2023-04-08 18:45:45,732 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.BasicTypeReference@1c90029b
2023-04-08 18:45:45,732 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1c90029b
2023-04-08 18:45:45,732 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.BasicTypeReference@4db728df
2023-04-08 18:45:45,732 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4db728df
2023-04-08 18:45:45,732 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@b0d3e7
2023-04-08 18:45:45,732 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@b0d3e7
2023-04-08 18:45:45,732 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@b0d3e7
2023-04-08 18:45:45,732 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@74bdfa0b
2023-04-08 18:45:45,732 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@74bdfa0b
2023-04-08 18:45:45,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@74bdfa0b
2023-04-08 18:45:45,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@68a5aadd
2023-04-08 18:45:45,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1c2096c6
2023-04-08 18:45:45,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration instant -> org.hibernate.type.BasicTypeReference@1a89414e
2023-04-08 18:45:45,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1a89414e
2023-04-08 18:45:45,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@17f8db6
2023-04-08 18:45:45,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@17f8db6
2023-04-08 18:45:45,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@17f8db6
2023-04-08 18:45:45,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@44492c06
2023-04-08 18:45:45,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5c4714ef
2023-04-08 18:45:45,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.BasicTypeReference@c94bd18
2023-04-08 18:45:45,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@c94bd18
2023-04-08 18:45:45,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.BasicTypeReference@71fb8301
2023-04-08 18:45:45,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@71fb8301
2023-04-08 18:45:45,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@71fb8301
2023-04-08 18:45:45,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.BasicTypeReference@7cdfa824
2023-04-08 18:45:45,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7cdfa824
2023-04-08 18:45:45,734 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@18db3b3c
2023-04-08 18:45:45,734 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@18db3b3c
2023-04-08 18:45:45,734 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@318e3942
2023-04-08 18:45:45,734 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@318e3942
2023-04-08 18:45:45,734 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1c4057f9
2023-04-08 18:45:45,734 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1c4057f9
2023-04-08 18:45:45,734 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.BasicTypeReference@1ddf42dd
2023-04-08 18:45:45,734 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1ddf42dd
2023-04-08 18:45:45,734 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5c1c9881
2023-04-08 18:45:45,738 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9f1ca74
2023-04-08 18:45:45,738 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9f1ca74
2023-04-08 18:45:45,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.JavaObjectType@4df0d9f8
2023-04-08 18:45:45,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4df0d9f8
2023-04-08 18:45:45,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration null -> org.hibernate.type.NullType@69b37f5c
2023-04-08 18:45:45,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@28b5662d
2023-04-08 18:45:45,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@34b2d51a
2023-04-08 18:45:45,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7e4ac598
2023-04-08 18:45:45,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@cf10c92
2023-04-08 18:45:45,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@f76872f
2023-04-08 18:45:45,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2d4e99de
2023-04-08 18:45:45,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@580ffea
2023-04-08 18:45:45,740 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@191e654
2023-04-08 18:45:45,780 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49e0b123) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e85e3f1)
2023-04-08 18:45:45,780 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@195498aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b360972)
2023-04-08 18:45:45,780 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@793d09e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@68821f6)
2023-04-08 18:45:45,780 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ba46845) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@40a28bda)
2023-04-08 18:45:45,780 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@592cb470) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e6cb932)
2023-04-08 18:45:45,780 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6921cfa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@523abba9)
2023-04-08 18:45:45,780 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6e090aaa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@15d79b70)
2023-04-08 18:45:45,780 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@33430fc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45424c0)
2023-04-08 18:45:45,780 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@22ae32ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b8b2184)
2023-04-08 18:45:45,781 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-04-08 18:45:45,781 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-04-08 18:45:45,781 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-04-08 18:45:45,782 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-04-08 18:45:45,782 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-04-08 18:45:45,784 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration null -> org.hibernate.type.NullType@39514976
2023-04-08 18:45:45,784 DEBUG org.hibernate.type.BasicTypeRegistry [main] Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@69b37f5c`
2023-04-08 18:45:45,786 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2023-04-08 18:45:45,786 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-04-08 18:45:45,786 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-04-08 18:45:45,786 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2023-04-08 18:45:45,786 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-04-08 18:45:45,786 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-04-08 18:45:45,787 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@dbc7e0a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@636fccb0]
2023-04-08 18:45:45,956 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@dbc7e0a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1031c1a0]
2023-04-08 18:45:46,184 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists policy
2023-04-08 18:45:46,430 DEBUG org.hibernate.SQL [main] 
    
    create table policy (
       car_id bigint not null auto_increment,
        contractor_customer_code varchar(255),
        effective_date datetime(6),
        expire_date datetime(6),
        insured_customer_code varchar(255),
        policy_number varchar(255),
        state varchar(255),
        primary key (car_id)
    ) engine=InnoDB
2023-04-08 18:45:46,677 DEBUG org.hibernate.SQL [main] 
    
    alter table policy 
       add constraint UKpwdbfish9akv2pufab9vybg19 unique (policy_number)
2023-04-08 18:45:46,929 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1031c1a0] for TypeConfiguration
2023-04-08 18:45:47,822 ERROR org.springframework.boot.SpringApplication [main] Application run failed
java.lang.IllegalStateException: Failed to execute ApplicationRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:763)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1304)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1293)
	at com.yuripe.batchType0A.BatchType0AApplication.main(BatchType0AApplication.java:14)
Caused by: org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [SELECT JOB_INSTANCE_ID, JOB_NAME from BATCH_JOB_INSTANCE where JOB_NAME = ? and JOB_KEY = ?]
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:101)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1538)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:667)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:713)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:744)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:757)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:815)
	at org.springframework.batch.core.repository.dao.JdbcJobInstanceDao.getJobInstance(JdbcJobInstanceDao.java:143)
	at org.springframework.batch.core.repository.support.SimpleJobRepository.isJobInstanceExists(SimpleJobRepository.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy2/jdk.proxy2.$Proxy102.isJobInstanceExists(Unknown Source)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.getNextJobParameters(JobLauncherApplicationRunner.java:206)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.execute(JobLauncherApplicationRunner.java:198)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.executeLocalJobs(JobLauncherApplicationRunner.java:178)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.launchJobFromProperties(JobLauncherApplicationRunner.java:166)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.run(JobLauncherApplicationRunner.java:161)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.run(JobLauncherApplicationRunner.java:156)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:760)
	... 5 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'normalize.BATCH_JOB_INSTANCE' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:972)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:722)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:651)
	... 31 common frames omitted
2023-04-08 18:45:47,839 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1031c1a0] for TypeConfiguration
2023-04-08 18:45:47,839 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@445f6aa7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1031c1a0]
2023-04-08 18:46:40,351 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2023-04-08 18:46:40,359 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@370a8b6e
2023-04-08 18:46:40,360 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@370a8b6e
2023-04-08 18:46:40,360 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@370a8b6e
2023-04-08 18:46:40,360 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@118fbaf0
2023-04-08 18:46:40,360 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@118fbaf0
2023-04-08 18:46:40,360 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@208f7165
2023-04-08 18:46:40,360 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@208f7165
2023-04-08 18:46:40,360 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@a0d875d
2023-04-08 18:46:40,360 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@a0d875d
2023-04-08 18:46:40,360 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.BasicTypeReference@693f2c89
2023-04-08 18:46:40,360 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.BasicTypeReference@693f2c89
2023-04-08 18:46:40,360 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@693f2c89
2023-04-08 18:46:40,360 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BasicTypeReference@50b4364
2023-04-08 18:46:40,361 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@50b4364
2023-04-08 18:46:40,361 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BasicTypeReference@50b4364
2023-04-08 18:46:40,361 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@28ce75ec
2023-04-08 18:46:40,361 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@28ce75ec
2023-04-08 18:46:40,361 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@28ce75ec
2023-04-08 18:46:40,361 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@28ce75ec
2023-04-08 18:46:40,361 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.BasicTypeReference@778113f2
2023-04-08 18:46:40,361 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BasicTypeReference@9dc782d
2023-04-08 18:46:40,362 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@9dc782d
2023-04-08 18:46:40,362 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1ba35152
2023-04-08 18:46:40,362 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@401926df
2023-04-08 18:46:40,362 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.BasicTypeReference@3ff8a3ad
2023-04-08 18:46:40,362 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.BasicTypeReference@3ff8a3ad
2023-04-08 18:46:40,362 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3ff8a3ad
2023-04-08 18:46:40,362 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.BasicTypeReference@550fa96f
2023-04-08 18:46:40,362 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.BasicTypeReference@550fa96f
2023-04-08 18:46:40,362 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@550fa96f
2023-04-08 18:46:40,362 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.BasicTypeReference@54275b5d
2023-04-08 18:46:40,362 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.BasicTypeReference@54275b5d
2023-04-08 18:46:40,362 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@54275b5d
2023-04-08 18:46:40,363 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.BasicTypeReference@5d01b0d8
2023-04-08 18:46:40,363 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.BasicTypeReference@5d01b0d8
2023-04-08 18:46:40,363 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5d01b0d8
2023-04-08 18:46:40,363 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.BasicTypeReference@271e851e
2023-04-08 18:46:40,363 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.BasicTypeReference@271e851e
2023-04-08 18:46:40,363 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@271e851e
2023-04-08 18:46:40,363 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@ff21443
2023-04-08 18:46:40,363 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@ff21443
2023-04-08 18:46:40,363 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@61e14b53
2023-04-08 18:46:40,363 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@61e14b53
2023-04-08 18:46:40,363 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.BasicTypeReference@31b6b0c7
2023-04-08 18:46:40,363 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.BasicTypeReference@31b6b0c7
2023-04-08 18:46:40,363 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@31b6b0c7
2023-04-08 18:46:40,363 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6253e59a
2023-04-08 18:46:40,363 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.BasicTypeReference@7d1cb59f
2023-04-08 18:46:40,363 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7d1cb59f
2023-04-08 18:46:40,363 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@16ccd2bc
2023-04-08 18:46:40,365 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.BasicTypeReference@12f8682a
2023-04-08 18:46:40,365 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@12f8682a
2023-04-08 18:46:40,365 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.BasicTypeReference@12f8682a
2023-04-08 18:46:40,365 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6f7a20da
2023-04-08 18:46:40,365 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@6f7a20da
2023-04-08 18:46:40,365 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@6f7a20da
2023-04-08 18:46:40,365 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.BasicTypeReference@7752c0e7
2023-04-08 18:46:40,365 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@77ba583
2023-04-08 18:46:40,365 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.BasicTypeReference@5613247e
2023-04-08 18:46:40,365 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5613247e
2023-04-08 18:46:40,365 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6851b296
2023-04-08 18:46:40,366 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6851b296
2023-04-08 18:46:40,366 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@9e50283
2023-04-08 18:46:40,367 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5368e981
2023-04-08 18:46:40,367 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1c171746
2023-04-08 18:46:40,367 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@79b7c350
2023-04-08 18:46:40,367 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@586737ff
2023-04-08 18:46:40,367 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4cd7e993
2023-04-08 18:46:40,367 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@685e6a68
2023-04-08 18:46:40,367 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@685e6a68
2023-04-08 18:46:40,367 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2fb48970
2023-04-08 18:46:40,367 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2fb48970
2023-04-08 18:46:40,367 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4e8d9bb6
2023-04-08 18:46:40,367 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4e8d9bb6
2023-04-08 18:46:40,368 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3de56885
2023-04-08 18:46:40,368 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3de56885
2023-04-08 18:46:40,368 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2673487b
2023-04-08 18:46:40,368 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2673487b
2023-04-08 18:46:40,368 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2d07aacc
2023-04-08 18:46:40,368 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@ff5d4f1
2023-04-08 18:46:40,368 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@194224ca
2023-04-08 18:46:40,368 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@194224ca
2023-04-08 18:46:40,368 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@254e9709
2023-04-08 18:46:40,368 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@254e9709
2023-04-08 18:46:40,368 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@350f18a6
2023-04-08 18:46:40,368 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@147c00aa
2023-04-08 18:46:40,368 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.BasicTypeReference@1c90029b
2023-04-08 18:46:40,368 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1c90029b
2023-04-08 18:46:40,369 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.BasicTypeReference@4db728df
2023-04-08 18:46:40,369 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4db728df
2023-04-08 18:46:40,369 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@b0d3e7
2023-04-08 18:46:40,369 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@b0d3e7
2023-04-08 18:46:40,369 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@b0d3e7
2023-04-08 18:46:40,369 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@74bdfa0b
2023-04-08 18:46:40,369 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@74bdfa0b
2023-04-08 18:46:40,369 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@74bdfa0b
2023-04-08 18:46:40,369 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@68a5aadd
2023-04-08 18:46:40,369 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1c2096c6
2023-04-08 18:46:40,369 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration instant -> org.hibernate.type.BasicTypeReference@1a89414e
2023-04-08 18:46:40,369 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1a89414e
2023-04-08 18:46:40,369 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@17f8db6
2023-04-08 18:46:40,370 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@17f8db6
2023-04-08 18:46:40,370 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@17f8db6
2023-04-08 18:46:40,370 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@44492c06
2023-04-08 18:46:40,370 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5c4714ef
2023-04-08 18:46:40,370 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.BasicTypeReference@c94bd18
2023-04-08 18:46:40,370 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@c94bd18
2023-04-08 18:46:40,370 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.BasicTypeReference@71fb8301
2023-04-08 18:46:40,370 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@71fb8301
2023-04-08 18:46:40,370 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@71fb8301
2023-04-08 18:46:40,370 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.BasicTypeReference@7cdfa824
2023-04-08 18:46:40,370 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7cdfa824
2023-04-08 18:46:40,370 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@18db3b3c
2023-04-08 18:46:40,370 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@18db3b3c
2023-04-08 18:46:40,370 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@318e3942
2023-04-08 18:46:40,370 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@318e3942
2023-04-08 18:46:40,370 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1c4057f9
2023-04-08 18:46:40,371 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1c4057f9
2023-04-08 18:46:40,371 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.BasicTypeReference@1ddf42dd
2023-04-08 18:46:40,371 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1ddf42dd
2023-04-08 18:46:40,371 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5c1c9881
2023-04-08 18:46:40,374 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9f1ca74
2023-04-08 18:46:40,374 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9f1ca74
2023-04-08 18:46:40,375 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.JavaObjectType@4df0d9f8
2023-04-08 18:46:40,375 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4df0d9f8
2023-04-08 18:46:40,376 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration null -> org.hibernate.type.NullType@69b37f5c
2023-04-08 18:46:40,376 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@28b5662d
2023-04-08 18:46:40,376 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@34b2d51a
2023-04-08 18:46:40,376 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7e4ac598
2023-04-08 18:46:40,376 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@cf10c92
2023-04-08 18:46:40,377 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@f76872f
2023-04-08 18:46:40,377 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2d4e99de
2023-04-08 18:46:40,377 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@580ffea
2023-04-08 18:46:40,377 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@191e654
2023-04-08 18:46:40,413 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49e0b123) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e85e3f1)
2023-04-08 18:46:40,414 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@195498aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b360972)
2023-04-08 18:46:40,414 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@793d09e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@68821f6)
2023-04-08 18:46:40,414 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ba46845) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@40a28bda)
2023-04-08 18:46:40,414 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@592cb470) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e6cb932)
2023-04-08 18:46:40,414 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6921cfa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@523abba9)
2023-04-08 18:46:40,414 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6e090aaa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@15d79b70)
2023-04-08 18:46:40,414 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@33430fc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45424c0)
2023-04-08 18:46:40,414 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@22ae32ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b8b2184)
2023-04-08 18:46:40,415 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-04-08 18:46:40,415 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-04-08 18:46:40,415 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-04-08 18:46:40,416 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-04-08 18:46:40,416 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-04-08 18:46:40,417 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration null -> org.hibernate.type.NullType@39514976
2023-04-08 18:46:40,417 DEBUG org.hibernate.type.BasicTypeRegistry [main] Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@69b37f5c`
2023-04-08 18:46:40,419 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2023-04-08 18:46:40,419 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-04-08 18:46:40,419 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-04-08 18:46:40,419 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2023-04-08 18:46:40,420 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-04-08 18:46:40,420 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-04-08 18:46:40,421 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@dbc7e0a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@636fccb0]
2023-04-08 18:46:40,582 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@dbc7e0a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1031c1a0]
2023-04-08 18:46:40,815 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists policy
2023-04-08 18:46:41,068 DEBUG org.hibernate.SQL [main] 
    
    create table policy (
       car_id bigint not null auto_increment,
        contractor_customer_code varchar(255),
        effective_date datetime(6),
        expire_date datetime(6),
        insured_customer_code varchar(255),
        policy_number varchar(255),
        state varchar(255),
        primary key (car_id)
    ) engine=InnoDB
2023-04-08 18:46:41,316 DEBUG org.hibernate.SQL [main] 
    
    alter table policy 
       add constraint UKpwdbfish9akv2pufab9vybg19 unique (policy_number)
2023-04-08 18:46:41,572 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1031c1a0] for TypeConfiguration
2023-04-08 18:46:42,445 ERROR org.springframework.boot.SpringApplication [main] Application run failed
java.lang.IllegalStateException: Failed to execute ApplicationRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:763)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1304)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1293)
	at com.yuripe.batchType0A.BatchType0AApplication.main(BatchType0AApplication.java:14)
Caused by: org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [SELECT JOB_INSTANCE_ID, JOB_NAME from BATCH_JOB_INSTANCE where JOB_NAME = ? and JOB_KEY = ?]
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:101)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1538)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:667)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:713)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:744)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:757)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:815)
	at org.springframework.batch.core.repository.dao.JdbcJobInstanceDao.getJobInstance(JdbcJobInstanceDao.java:143)
	at org.springframework.batch.core.repository.support.SimpleJobRepository.isJobInstanceExists(SimpleJobRepository.java:112)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy2/jdk.proxy2.$Proxy102.isJobInstanceExists(Unknown Source)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.getNextJobParameters(JobLauncherApplicationRunner.java:206)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.execute(JobLauncherApplicationRunner.java:198)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.executeLocalJobs(JobLauncherApplicationRunner.java:178)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.launchJobFromProperties(JobLauncherApplicationRunner.java:166)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.run(JobLauncherApplicationRunner.java:161)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.run(JobLauncherApplicationRunner.java:156)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:760)
	... 5 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'normalize.BATCH_JOB_INSTANCE' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:972)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:722)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:651)
	... 31 common frames omitted
2023-04-08 18:46:42,462 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1031c1a0] for TypeConfiguration
2023-04-08 18:46:42,462 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@445f6aa7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1031c1a0]
2023-04-08 18:48:24,065 ERROR com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Exception during pool initialization.
java.sql.SQLSyntaxErrorException: Unknown database 'BATCH'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:824)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:444)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:237)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:336)
	at org.springframework.boot.jdbc.DatabaseDriver.fromDataSource(DatabaseDriver.java:321)
	at org.springframework.boot.jdbc.init.PlatformPlaceholderDatabaseDriverResolver.getDatabaseDriver(PlatformPlaceholderDatabaseDriverResolver.java:137)
	at org.springframework.boot.jdbc.init.PlatformPlaceholderDatabaseDriverResolver.determinePlatform(PlatformPlaceholderDatabaseDriverResolver.java:131)
	at org.springframework.boot.jdbc.init.PlatformPlaceholderDatabaseDriverResolver.lambda$resolveAll$0(PlatformPlaceholderDatabaseDriverResolver.java:96)
	at org.springframework.boot.jdbc.init.PlatformPlaceholderDatabaseDriverResolver.resolveAll(PlatformPlaceholderDatabaseDriverResolver.java:121)
	at org.springframework.boot.jdbc.init.PlatformPlaceholderDatabaseDriverResolver.resolveAll(PlatformPlaceholderDatabaseDriverResolver.java:96)
	at org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer.resolveSchemaLocations(BatchDataSourceScriptDatabaseInitializer.java:83)
	at org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer.getSettings(BatchDataSourceScriptDatabaseInitializer.java:72)
	at org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer.<init>(BatchDataSourceScriptDatabaseInitializer.java:47)
	at org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$DataSourceInitializerConfiguration.batchDataSourceInitializer(BatchAutoConfiguration.java:158)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1132)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:907)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1304)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1293)
	at com.yuripe.batchType0A.BatchType0AApplication.main(BatchType0AApplication.java:14)
2023-04-08 18:48:24,096 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'batchDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/batch/BatchAutoConfiguration$DataSourceInitializerConfiguration.class]: Failed to instantiate [org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer]: Factory method 'batchDataSourceInitializer' threw exception with message: Unable to detect database type
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1132)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:907)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1304)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1293)
	at com.yuripe.batchType0A.BatchType0AApplication.main(BatchType0AApplication.java:14)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer]: Factory method 'batchDataSourceInitializer' threw exception with message: Unable to detect database type
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:171)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 21 common frames omitted
Caused by: java.lang.IllegalStateException: Unable to detect database type
	at org.springframework.util.Assert.state(Assert.java:76)
	at org.springframework.boot.jdbc.init.PlatformPlaceholderDatabaseDriverResolver.determinePlatform(PlatformPlaceholderDatabaseDriverResolver.java:132)
	at org.springframework.boot.jdbc.init.PlatformPlaceholderDatabaseDriverResolver.lambda$resolveAll$0(PlatformPlaceholderDatabaseDriverResolver.java:96)
	at org.springframework.boot.jdbc.init.PlatformPlaceholderDatabaseDriverResolver.resolveAll(PlatformPlaceholderDatabaseDriverResolver.java:121)
	at org.springframework.boot.jdbc.init.PlatformPlaceholderDatabaseDriverResolver.resolveAll(PlatformPlaceholderDatabaseDriverResolver.java:96)
	at org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer.resolveSchemaLocations(BatchDataSourceScriptDatabaseInitializer.java:83)
	at org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer.getSettings(BatchDataSourceScriptDatabaseInitializer.java:72)
	at org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer.<init>(BatchDataSourceScriptDatabaseInitializer.java:47)
	at org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$DataSourceInitializerConfiguration.batchDataSourceInitializer(BatchAutoConfiguration.java:158)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)
	... 22 common frames omitted
2023-04-08 18:48:45,066 ERROR com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Exception during pool initialization.
java.sql.SQLSyntaxErrorException: Unknown database 'BATCH'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:824)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:444)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:237)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:336)
	at org.springframework.boot.jdbc.DatabaseDriver.fromDataSource(DatabaseDriver.java:321)
	at org.springframework.boot.jdbc.init.PlatformPlaceholderDatabaseDriverResolver.getDatabaseDriver(PlatformPlaceholderDatabaseDriverResolver.java:137)
	at org.springframework.boot.jdbc.init.PlatformPlaceholderDatabaseDriverResolver.determinePlatform(PlatformPlaceholderDatabaseDriverResolver.java:131)
	at org.springframework.boot.jdbc.init.PlatformPlaceholderDatabaseDriverResolver.lambda$resolveAll$0(PlatformPlaceholderDatabaseDriverResolver.java:96)
	at org.springframework.boot.jdbc.init.PlatformPlaceholderDatabaseDriverResolver.resolveAll(PlatformPlaceholderDatabaseDriverResolver.java:121)
	at org.springframework.boot.jdbc.init.PlatformPlaceholderDatabaseDriverResolver.resolveAll(PlatformPlaceholderDatabaseDriverResolver.java:96)
	at org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer.resolveSchemaLocations(BatchDataSourceScriptDatabaseInitializer.java:83)
	at org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer.getSettings(BatchDataSourceScriptDatabaseInitializer.java:72)
	at org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer.<init>(BatchDataSourceScriptDatabaseInitializer.java:47)
	at org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$DataSourceInitializerConfiguration.batchDataSourceInitializer(BatchAutoConfiguration.java:158)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1132)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:907)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1304)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1293)
	at com.yuripe.batchType0A.BatchType0AApplication.main(BatchType0AApplication.java:14)
2023-04-08 18:48:45,097 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'batchDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/batch/BatchAutoConfiguration$DataSourceInitializerConfiguration.class]: Failed to instantiate [org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer]: Factory method 'batchDataSourceInitializer' threw exception with message: Unable to detect database type
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1132)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:907)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1304)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1293)
	at com.yuripe.batchType0A.BatchType0AApplication.main(BatchType0AApplication.java:14)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer]: Factory method 'batchDataSourceInitializer' threw exception with message: Unable to detect database type
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:171)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 21 common frames omitted
Caused by: java.lang.IllegalStateException: Unable to detect database type
	at org.springframework.util.Assert.state(Assert.java:76)
	at org.springframework.boot.jdbc.init.PlatformPlaceholderDatabaseDriverResolver.determinePlatform(PlatformPlaceholderDatabaseDriverResolver.java:132)
	at org.springframework.boot.jdbc.init.PlatformPlaceholderDatabaseDriverResolver.lambda$resolveAll$0(PlatformPlaceholderDatabaseDriverResolver.java:96)
	at org.springframework.boot.jdbc.init.PlatformPlaceholderDatabaseDriverResolver.resolveAll(PlatformPlaceholderDatabaseDriverResolver.java:121)
	at org.springframework.boot.jdbc.init.PlatformPlaceholderDatabaseDriverResolver.resolveAll(PlatformPlaceholderDatabaseDriverResolver.java:96)
	at org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer.resolveSchemaLocations(BatchDataSourceScriptDatabaseInitializer.java:83)
	at org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer.getSettings(BatchDataSourceScriptDatabaseInitializer.java:72)
	at org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer.<init>(BatchDataSourceScriptDatabaseInitializer.java:47)
	at org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$DataSourceInitializerConfiguration.batchDataSourceInitializer(BatchAutoConfiguration.java:158)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)
	... 22 common frames omitted
2023-04-08 18:50:18,819 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2023-04-08 18:50:18,827 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@12f8682a
2023-04-08 18:50:18,827 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@12f8682a
2023-04-08 18:50:18,828 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@12f8682a
2023-04-08 18:50:18,828 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6f7a20da
2023-04-08 18:50:18,828 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6f7a20da
2023-04-08 18:50:18,828 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7752c0e7
2023-04-08 18:50:18,828 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7752c0e7
2023-04-08 18:50:18,828 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@77ba583
2023-04-08 18:50:18,828 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@77ba583
2023-04-08 18:50:18,828 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.BasicTypeReference@5613247e
2023-04-08 18:50:18,828 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.BasicTypeReference@5613247e
2023-04-08 18:50:18,828 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5613247e
2023-04-08 18:50:18,828 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BasicTypeReference@6851b296
2023-04-08 18:50:18,829 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6851b296
2023-04-08 18:50:18,829 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BasicTypeReference@6851b296
2023-04-08 18:50:18,829 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1c171746
2023-04-08 18:50:18,829 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1c171746
2023-04-08 18:50:18,829 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@1c171746
2023-04-08 18:50:18,829 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@1c171746
2023-04-08 18:50:18,829 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.BasicTypeReference@79b7c350
2023-04-08 18:50:18,829 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BasicTypeReference@586737ff
2023-04-08 18:50:18,829 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@586737ff
2023-04-08 18:50:18,829 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4cd7e993
2023-04-08 18:50:18,830 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@685e6a68
2023-04-08 18:50:18,830 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.BasicTypeReference@2fb48970
2023-04-08 18:50:18,830 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.BasicTypeReference@2fb48970
2023-04-08 18:50:18,830 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2fb48970
2023-04-08 18:50:18,830 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.BasicTypeReference@4e8d9bb6
2023-04-08 18:50:18,830 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.BasicTypeReference@4e8d9bb6
2023-04-08 18:50:18,830 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4e8d9bb6
2023-04-08 18:50:18,830 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.BasicTypeReference@3de56885
2023-04-08 18:50:18,830 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.BasicTypeReference@3de56885
2023-04-08 18:50:18,830 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3de56885
2023-04-08 18:50:18,830 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.BasicTypeReference@2673487b
2023-04-08 18:50:18,830 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.BasicTypeReference@2673487b
2023-04-08 18:50:18,830 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2673487b
2023-04-08 18:50:18,830 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.BasicTypeReference@2d07aacc
2023-04-08 18:50:18,830 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.BasicTypeReference@2d07aacc
2023-04-08 18:50:18,831 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2d07aacc
2023-04-08 18:50:18,831 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@ff5d4f1
2023-04-08 18:50:18,831 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@ff5d4f1
2023-04-08 18:50:18,831 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@194224ca
2023-04-08 18:50:18,831 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@194224ca
2023-04-08 18:50:18,831 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.BasicTypeReference@254e9709
2023-04-08 18:50:18,831 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.BasicTypeReference@254e9709
2023-04-08 18:50:18,831 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@254e9709
2023-04-08 18:50:18,831 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@350f18a6
2023-04-08 18:50:18,831 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.BasicTypeReference@147c00aa
2023-04-08 18:50:18,831 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@147c00aa
2023-04-08 18:50:18,831 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1c90029b
2023-04-08 18:50:18,831 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.BasicTypeReference@4db728df
2023-04-08 18:50:18,832 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4db728df
2023-04-08 18:50:18,832 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.BasicTypeReference@4db728df
2023-04-08 18:50:18,832 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@b0d3e7
2023-04-08 18:50:18,832 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@b0d3e7
2023-04-08 18:50:18,832 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@b0d3e7
2023-04-08 18:50:18,832 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.BasicTypeReference@74bdfa0b
2023-04-08 18:50:18,832 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@68a5aadd
2023-04-08 18:50:18,832 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.BasicTypeReference@1c2096c6
2023-04-08 18:50:18,832 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1c2096c6
2023-04-08 18:50:18,832 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1a89414e
2023-04-08 18:50:18,832 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1a89414e
2023-04-08 18:50:18,833 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@17f8db6
2023-04-08 18:50:18,833 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@44492c06
2023-04-08 18:50:18,833 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5c4714ef
2023-04-08 18:50:18,833 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@c94bd18
2023-04-08 18:50:18,833 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@71fb8301
2023-04-08 18:50:18,833 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7cdfa824
2023-04-08 18:50:18,833 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@18db3b3c
2023-04-08 18:50:18,833 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@18db3b3c
2023-04-08 18:50:18,833 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@318e3942
2023-04-08 18:50:18,833 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@318e3942
2023-04-08 18:50:18,833 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1c4057f9
2023-04-08 18:50:18,833 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1c4057f9
2023-04-08 18:50:18,833 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1ddf42dd
2023-04-08 18:50:18,834 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1ddf42dd
2023-04-08 18:50:18,834 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5c1c9881
2023-04-08 18:50:18,834 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5c1c9881
2023-04-08 18:50:18,834 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1c18ee69
2023-04-08 18:50:18,834 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2f99d8c
2023-04-08 18:50:18,834 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@65d7eea4
2023-04-08 18:50:18,834 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@65d7eea4
2023-04-08 18:50:18,834 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5d37aa0f
2023-04-08 18:50:18,834 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5d37aa0f
2023-04-08 18:50:18,834 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6076c66
2023-04-08 18:50:18,834 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@485c84d7
2023-04-08 18:50:18,834 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.BasicTypeReference@1224e1b6
2023-04-08 18:50:18,835 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1224e1b6
2023-04-08 18:50:18,835 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.BasicTypeReference@72a3462f
2023-04-08 18:50:18,835 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@72a3462f
2023-04-08 18:50:18,835 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4ffa7041
2023-04-08 18:50:18,835 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4ffa7041
2023-04-08 18:50:18,835 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4ffa7041
2023-04-08 18:50:18,835 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@632c3f55
2023-04-08 18:50:18,835 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@632c3f55
2023-04-08 18:50:18,835 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@632c3f55
2023-04-08 18:50:18,835 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@56b05bd7
2023-04-08 18:50:18,835 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3e4afd10
2023-04-08 18:50:18,835 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration instant -> org.hibernate.type.BasicTypeReference@22aefae0
2023-04-08 18:50:18,835 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@22aefae0
2023-04-08 18:50:18,836 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@20faaf77
2023-04-08 18:50:18,836 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@20faaf77
2023-04-08 18:50:18,836 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@20faaf77
2023-04-08 18:50:18,836 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7440265c
2023-04-08 18:50:18,836 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1d8be7b9
2023-04-08 18:50:18,836 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.BasicTypeReference@48277712
2023-04-08 18:50:18,836 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@48277712
2023-04-08 18:50:18,836 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.BasicTypeReference@3d53e876
2023-04-08 18:50:18,836 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3d53e876
2023-04-08 18:50:18,836 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3d53e876
2023-04-08 18:50:18,836 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.BasicTypeReference@48d44b46
2023-04-08 18:50:18,836 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@48d44b46
2023-04-08 18:50:18,837 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@aa0dbca
2023-04-08 18:50:18,837 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@aa0dbca
2023-04-08 18:50:18,837 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@794cb26b
2023-04-08 18:50:18,837 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@794cb26b
2023-04-08 18:50:18,837 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5b7ee56c
2023-04-08 18:50:18,837 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5b7ee56c
2023-04-08 18:50:18,837 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.BasicTypeReference@311a0b3e
2023-04-08 18:50:18,837 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@311a0b3e
2023-04-08 18:50:18,837 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3de8f85c
2023-04-08 18:50:18,841 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@70543cae
2023-04-08 18:50:18,841 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@70543cae
2023-04-08 18:50:18,842 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.JavaObjectType@7f2ca6f8
2023-04-08 18:50:18,842 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7f2ca6f8
2023-04-08 18:50:18,842 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration null -> org.hibernate.type.NullType@10f20d38
2023-04-08 18:50:18,842 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@538aa83f
2023-04-08 18:50:18,842 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@63e70bf9
2023-04-08 18:50:18,842 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@402a69f
2023-04-08 18:50:18,842 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@419f0ea
2023-04-08 18:50:18,842 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2d47b06
2023-04-08 18:50:18,842 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@59371066
2023-04-08 18:50:18,842 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@48106381
2023-04-08 18:50:18,842 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3c544c9
2023-04-08 18:50:18,876 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@63b4b9c6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c66ddab)
2023-04-08 18:50:18,877 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@603f4e3e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45fb2354)
2023-04-08 18:50:18,877 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c7d8a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5996d6f2)
2023-04-08 18:50:18,877 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@43423d40) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5f3f57ff)
2023-04-08 18:50:18,877 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6200b644) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@d4ecdb0)
2023-04-08 18:50:18,877 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5fb44964) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7a117dc2)
2023-04-08 18:50:18,877 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d444652) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@669c2b07)
2023-04-08 18:50:18,877 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b1ea1d9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6a902015)
2023-04-08 18:50:18,877 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@55d99dc3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@521a506c)
2023-04-08 18:50:18,878 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-04-08 18:50:18,878 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-04-08 18:50:18,879 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-04-08 18:50:18,879 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-04-08 18:50:18,880 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-04-08 18:50:18,881 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration null -> org.hibernate.type.NullType@16b7e04a
2023-04-08 18:50:18,881 DEBUG org.hibernate.type.BasicTypeRegistry [main] Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@10f20d38`
2023-04-08 18:50:18,883 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2023-04-08 18:50:18,883 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-04-08 18:50:18,883 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-04-08 18:50:18,883 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2023-04-08 18:50:18,883 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-04-08 18:50:18,883 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-04-08 18:50:18,884 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3722f39d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4ec8d9b2]
2023-04-08 18:50:19,058 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3722f39d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3d02ff64]
2023-04-08 18:50:19,288 DEBUG org.hibernate.SQL [main] 
    
    drop table if exists policy
2023-04-08 18:50:19,651 DEBUG org.hibernate.SQL [main] 
    
    create table policy (
       car_id bigint not null auto_increment,
        contractor_customer_code varchar(255),
        effective_date datetime(6),
        expire_date datetime(6),
        insured_customer_code varchar(255),
        policy_number varchar(255),
        state varchar(255),
        primary key (car_id)
    ) engine=InnoDB
2023-04-08 18:50:19,911 DEBUG org.hibernate.SQL [main] 
    
    alter table policy 
       add constraint UKpwdbfish9akv2pufab9vybg19 unique (policy_number)
2023-04-08 18:50:20,184 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3d02ff64] for TypeConfiguration
2023-04-08 18:50:29,266 ERROR org.springframework.batch.core.step.AbstractStep [main] Encountered an error executing step step1 in job importUserJob
org.springframework.batch.item.ItemStreamException: Failed to initialize the reader
	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.open(AbstractItemCountingItemStreamItemReader.java:152)
	at org.springframework.batch.item.support.CompositeItemStream.open(CompositeItemStream.java:124)
	at org.springframework.batch.core.step.tasklet.TaskletStep.open(TaskletStep.java:293)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:224)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:153)
	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:68)
	at org.springframework.batch.core.job.flow.support.state.StepState.handle(StepState.java:68)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.resume(SimpleFlow.java:167)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.start(SimpleFlow.java:142)
	at org.springframework.batch.core.job.flow.FlowJob.doExecute(FlowJob.java:137)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:316)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:157)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:148)
	at org.springframework.batch.core.launch.support.TaskExecutorJobLauncher.run(TaskExecutorJobLauncher.java:70)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.execute(JobLauncherApplicationRunner.java:199)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.executeLocalJobs(JobLauncherApplicationRunner.java:178)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.launchJobFromProperties(JobLauncherApplicationRunner.java:166)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.run(JobLauncherApplicationRunner.java:161)
	at org.springframework.boot.autoconfigure.batch.JobLauncherApplicationRunner.run(JobLauncherApplicationRunner.java:156)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:760)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1304)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1293)
	at com.yuripe.batchType0A.BatchType0AApplication.main(BatchType0AApplication.java:14)
Caused by: java.lang.IllegalStateException: Input resource must exist (reader is in 'strict' mode): class path resource [sample-data.csv]
	at org.springframework.batch.item.file.FlatFileItemReader.doOpen(FlatFileItemReader.java:262)
	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.open(AbstractItemCountingItemStreamItemReader.java:149)
	... 25 common frames omitted
2023-04-08 18:50:36,910 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [RMI TCP Connection(7)-127.0.0.1] Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3d02ff64] for TypeConfiguration
2023-04-08 18:50:36,911 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [RMI TCP Connection(7)-127.0.0.1] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1cc34b23] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3d02ff64]
