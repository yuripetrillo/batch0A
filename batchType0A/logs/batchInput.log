2023-05-24 19:16:23,944 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.0.Final
2023-05-24 19:16:24,021 INFO com.yuripe.batchType0A.BatchType0AApplication [main] Starting BatchType0AApplication using Java 17.0.2 with PID 4764 (C:\Users\yurip\git\batch0A\batchType0A\target\classes started by yurip in C:\Users\yurip\git\batch0A\batchType0A)
2023-05-24 19:16:24,022 INFO com.yuripe.batchType0A.BatchType0AApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-05-24 19:16:24,764 INFO org.springframework.batch.core.configuration.annotation.BatchRegistrar [main] Finished Spring Batch infrastructure beans configuration in 6 ms.
2023-05-24 19:16:25,145 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2023-05-24 19:16:25,148 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-05-24 19:16:25,188 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 32 ms. Found 0 JDBC repository interfaces.
2023-05-24 19:16:25,203 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2023-05-24 19:16:25,205 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-05-24 19:16:25,214 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 3 ms. Found 0 JPA repository interfaces.
2023-05-24 19:16:25,883 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-05-24 19:16:25,904 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-05-24 19:16:25,906 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2023-05-24 19:16:25,906 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-05-24 19:16:25,994 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2023-05-24 19:16:25,994 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1918 ms
2023-05-24 19:16:26,204 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-05-24 19:16:26,294 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 6.1.7.Final
2023-05-24 19:16:26,701 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2023-05-24 19:16:26,724 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1999149e
2023-05-24 19:16:26,725 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1999149e
2023-05-24 19:16:26,725 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1999149e
2023-05-24 19:16:26,725 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@65d73bd
2023-05-24 19:16:26,726 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@65d73bd
2023-05-24 19:16:26,726 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@27896d3b
2023-05-24 19:16:26,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@27896d3b
2023-05-24 19:16:26,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3ed7dd70
2023-05-24 19:16:26,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3ed7dd70
2023-05-24 19:16:26,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.BasicTypeReference@6f3b13d0
2023-05-24 19:16:26,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.BasicTypeReference@6f3b13d0
2023-05-24 19:16:26,728 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6f3b13d0
2023-05-24 19:16:26,728 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BasicTypeReference@6ea66c33
2023-05-24 19:16:26,729 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6ea66c33
2023-05-24 19:16:26,729 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BasicTypeReference@6ea66c33
2023-05-24 19:16:26,729 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@59b447a4
2023-05-24 19:16:26,729 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@59b447a4
2023-05-24 19:16:26,730 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@59b447a4
2023-05-24 19:16:26,730 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@59b447a4
2023-05-24 19:16:26,730 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.BasicTypeReference@69ba3f4e
2023-05-24 19:16:26,730 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BasicTypeReference@579846cc
2023-05-24 19:16:26,730 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@579846cc
2023-05-24 19:16:26,730 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@a826ff8
2023-05-24 19:16:26,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@71f0806b
2023-05-24 19:16:26,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.BasicTypeReference@49889154
2023-05-24 19:16:26,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.BasicTypeReference@49889154
2023-05-24 19:16:26,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@49889154
2023-05-24 19:16:26,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.BasicTypeReference@5c33008f
2023-05-24 19:16:26,732 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.BasicTypeReference@5c33008f
2023-05-24 19:16:26,732 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5c33008f
2023-05-24 19:16:26,732 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.BasicTypeReference@45d7495e
2023-05-24 19:16:26,732 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.BasicTypeReference@45d7495e
2023-05-24 19:16:26,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@45d7495e
2023-05-24 19:16:26,734 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.BasicTypeReference@30517a57
2023-05-24 19:16:26,734 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.BasicTypeReference@30517a57
2023-05-24 19:16:26,734 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@30517a57
2023-05-24 19:16:26,734 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.BasicTypeReference@3dde5f38
2023-05-24 19:16:26,735 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.BasicTypeReference@3dde5f38
2023-05-24 19:16:26,735 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3dde5f38
2023-05-24 19:16:26,735 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@79ad1774
2023-05-24 19:16:26,735 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@79ad1774
2023-05-24 19:16:26,736 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@64f3ca6
2023-05-24 19:16:26,736 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@64f3ca6
2023-05-24 19:16:26,736 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.BasicTypeReference@3df77dfa
2023-05-24 19:16:26,737 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.BasicTypeReference@3df77dfa
2023-05-24 19:16:26,738 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3df77dfa
2023-05-24 19:16:26,738 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@721fc2e3
2023-05-24 19:16:26,738 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.BasicTypeReference@63187d63
2023-05-24 19:16:26,738 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@63187d63
2023-05-24 19:16:26,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1ccdc7aa
2023-05-24 19:16:26,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.BasicTypeReference@1a536164
2023-05-24 19:16:26,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1a536164
2023-05-24 19:16:26,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.BasicTypeReference@1a536164
2023-05-24 19:16:26,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1657b017
2023-05-24 19:16:26,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@1657b017
2023-05-24 19:16:26,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@1657b017
2023-05-24 19:16:26,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.BasicTypeReference@368424db
2023-05-24 19:16:26,739 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@44864536
2023-05-24 19:16:26,740 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.BasicTypeReference@455f4483
2023-05-24 19:16:26,740 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@455f4483
2023-05-24 19:16:26,740 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6e239337
2023-05-24 19:16:26,740 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6e239337
2023-05-24 19:16:26,740 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7996d0d4
2023-05-24 19:16:26,740 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@fcf9525
2023-05-24 19:16:26,740 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@300bb303
2023-05-24 19:16:26,740 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4243341e
2023-05-24 19:16:26,740 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@d1c5cf2
2023-05-24 19:16:26,741 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7e0986c9
2023-05-24 19:16:26,741 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1377b1a0
2023-05-24 19:16:26,741 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1377b1a0
2023-05-24 19:16:26,741 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@48cf8414
2023-05-24 19:16:26,741 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@48cf8414
2023-05-24 19:16:26,741 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@27dbaa33
2023-05-24 19:16:26,741 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@27dbaa33
2023-05-24 19:16:26,742 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@15d65fcf
2023-05-24 19:16:26,742 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@15d65fcf
2023-05-24 19:16:26,742 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3b021664
2023-05-24 19:16:26,742 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3b021664
2023-05-24 19:16:26,742 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@f59da34
2023-05-24 19:16:26,742 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@752973de
2023-05-24 19:16:26,742 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@52a67293
2023-05-24 19:16:26,743 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@52a67293
2023-05-24 19:16:26,744 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@793cef95
2023-05-24 19:16:26,744 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@793cef95
2023-05-24 19:16:26,744 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@38f502fc
2023-05-24 19:16:26,744 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@67c21bf
2023-05-24 19:16:26,744 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.BasicTypeReference@67afe909
2023-05-24 19:16:26,744 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@67afe909
2023-05-24 19:16:26,744 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.BasicTypeReference@79f1e22e
2023-05-24 19:16:26,744 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@79f1e22e
2023-05-24 19:16:26,744 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6903ed0e
2023-05-24 19:16:26,744 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6903ed0e
2023-05-24 19:16:26,744 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6903ed0e
2023-05-24 19:16:26,745 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@e154848
2023-05-24 19:16:26,745 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@e154848
2023-05-24 19:16:26,745 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@e154848
2023-05-24 19:16:26,745 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@16ea0f22
2023-05-24 19:16:26,745 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@60fc7f43
2023-05-24 19:16:26,746 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration instant -> org.hibernate.type.BasicTypeReference@16e195cf
2023-05-24 19:16:26,746 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@16e195cf
2023-05-24 19:16:26,746 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3212d853
2023-05-24 19:16:26,746 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3212d853
2023-05-24 19:16:26,746 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3212d853
2023-05-24 19:16:26,746 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@74c7522c
2023-05-24 19:16:26,747 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@77c23d90
2023-05-24 19:16:26,748 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.BasicTypeReference@6d17914a
2023-05-24 19:16:26,748 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6d17914a
2023-05-24 19:16:26,749 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.BasicTypeReference@49631cfb
2023-05-24 19:16:26,749 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@49631cfb
2023-05-24 19:16:26,753 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@49631cfb
2023-05-24 19:16:26,754 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.BasicTypeReference@77b71c9
2023-05-24 19:16:26,754 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@77b71c9
2023-05-24 19:16:26,754 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6133e20b
2023-05-24 19:16:26,754 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6133e20b
2023-05-24 19:16:26,755 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@30ffb2a6
2023-05-24 19:16:26,755 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@30ffb2a6
2023-05-24 19:16:26,755 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@612af486
2023-05-24 19:16:26,755 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@612af486
2023-05-24 19:16:26,755 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.BasicTypeReference@3d033453
2023-05-24 19:16:26,755 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3d033453
2023-05-24 19:16:26,755 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@43deba42
2023-05-24 19:16:26,772 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@28831d69
2023-05-24 19:16:26,772 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@28831d69
2023-05-24 19:16:26,774 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.JavaObjectType@e162a35
2023-05-24 19:16:26,775 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@e162a35
2023-05-24 19:16:26,776 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration null -> org.hibernate.type.NullType@734a149a
2023-05-24 19:16:26,777 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6ce9771c
2023-05-24 19:16:26,777 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4a9b92c6
2023-05-24 19:16:26,777 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6eed46e9
2023-05-24 19:16:26,778 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4d20616a
2023-05-24 19:16:26,778 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6ad6ae45
2023-05-24 19:16:26,778 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7c4d1c7b
2023-05-24 19:16:26,778 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7893c715
2023-05-24 19:16:26,778 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@36f6d25c
2023-05-24 19:16:26,833 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-05-24 19:16:27,172 INFO com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6de33fde
2023-05-24 19:16:27,176 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-05-24 19:16:27,209 INFO SQL dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-05-24 19:16:27,211 WARN org.hibernate.orm.deprecation [main] HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2023-05-24 19:16:27,242 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1cb849b2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6fe2a366)
2023-05-24 19:16:27,243 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6dd38df2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@99c3cee)
2023-05-24 19:16:27,243 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57b711b6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2db461b5)
2023-05-24 19:16:27,243 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c79c5ec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@34eaf9c1)
2023-05-24 19:16:27,243 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5bbf744b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55881f40)
2023-05-24 19:16:27,243 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@474ce6b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@248b2b61)
2023-05-24 19:16:27,243 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b61e97) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@11d1735e)
2023-05-24 19:16:27,243 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@31082efa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ca5cb99)
2023-05-24 19:16:27,244 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7853363c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6282f1eb)
2023-05-24 19:16:27,245 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-05-24 19:16:27,245 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-05-24 19:16:27,246 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-05-24 19:16:27,248 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-24 19:16:27,248 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-24 19:16:27,252 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration null -> org.hibernate.type.NullType@681311a7
2023-05-24 19:16:27,252 DEBUG org.hibernate.type.BasicTypeRegistry [main] Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@734a149a`
2023-05-24 19:16:27,256 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2023-05-24 19:16:27,256 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-24 19:16:27,256 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-24 19:16:27,256 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2023-05-24 19:16:27,256 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-24 19:16:27,256 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-24 19:16:27,258 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ceb11f9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4d664323]
2023-05-24 19:16:27,573 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ceb11f9] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@71418a4a]
2023-05-24 19:16:27,604 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-05-24 19:16:27,615 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@71418a4a] for TypeConfiguration
2023-05-24 19:16:27,618 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-05-24 19:16:27,705 INFO org.springframework.batch.core.repository.support.JobRepositoryFactoryBean [main] No database type set, using meta data indicating: MYSQL
2023-05-24 19:16:27,724 INFO org.springframework.batch.core.launch.support.SimpleJobLauncher [main] No TaskExecutor has been set, defaulting to synchronous executor.
2023-05-24 19:16:42,502 INFO org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor [main] No Micrometer observation registry found, defaulting to ObservationRegistry.NOOP
2023-05-24 19:16:42,530 INFO org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor [main] No Micrometer observation registry found, defaulting to ObservationRegistry.NOOP
2023-05-24 19:16:42,569 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-05-24 19:16:42,640 WARN org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration [main] 

Using generated security password: 608adb26-c27b-4a03-8647-6a2b1f1ec4be

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2023-05-24 19:16:42,834 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3ea6faf0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6fdb1a59, org.springframework.security.web.context.SecurityContextHolderFilter@691eb389, org.springframework.security.web.header.HeaderWriterFilter@626766fd, org.springframework.web.filter.CorsFilter@55c341d0, org.springframework.security.web.authentication.logout.LogoutFilter@5740ad76, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@40edc64e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2699b656, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@348bd063, org.springframework.security.web.access.ExceptionTranslationFilter@7341baa3]
2023-05-24 19:16:43,706 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8080"]
2023-05-24 19:16:43,755 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-05-24 19:16:43,776 INFO com.yuripe.batchType0A.BatchType0AApplication [main] Started BatchType0AApplication in 20.192 seconds (process running for 21.539)
2023-05-24 19:17:17,866 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-05-24 19:17:17,867 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-05-24 19:17:17,869 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8080-exec-1] Completed initialization in 2 ms
2023-05-24 19:17:18,223 ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] [http-nio-8080-exec-1] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.batch.core.repository.JobExecutionAlreadyRunningException: A job execution for this job is already running: JobInstance: id=46, version=0, Job=[importUserJob]] with root cause
org.springframework.batch.core.repository.JobExecutionAlreadyRunningException: A job execution for this job is already running: JobInstance: id=46, version=0, Job=[importUserJob]
	at org.springframework.batch.core.repository.support.SimpleJobRepository.createJobExecution(SimpleJobRepository.java:145)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.batch.core.repository.support.AbstractJobRepositoryFactoryBean$1.invoke(AbstractJobRepositoryFactoryBean.java:207)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:218)
	at jdk.proxy2/jdk.proxy2.$Proxy95.createJobExecution(Unknown Source)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:145)
	at org.springframework.batch.core.launch.support.TaskExecutorJobLauncher.run(TaskExecutorJobLauncher.java:70)
	at com.yuripe.batchType0A.Controller.BatchController.importFileAndRun(BatchController.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:563)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-24 19:18:13,760 INFO org.springframework.batch.core.launch.support.SimpleJobLauncher [http-nio-8080-exec-2] Job: [FlowJob: [name=importUserJob]] launched with the following parameters: [{'filePattern':'{value=FILE13.txt, type=class java.lang.String, identifying=true}'}]
2023-05-24 19:18:59,399 INFO org.springframework.batch.core.job.SimpleStepHandler [http-nio-8080-exec-2] Executing step: [step1]
2023-05-24 19:18:59,414 ERROR org.springframework.batch.core.step.AbstractStep [http-nio-8080-exec-2] Encountered an error executing step step1 in job importUserJob
org.springframework.batch.item.ItemStreamException: Failed to initialize the reader
	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.open(AbstractItemCountingItemStreamItemReader.java:152)
	at org.springframework.batch.item.support.CompositeItemStream.open(CompositeItemStream.java:124)
	at org.springframework.batch.core.step.tasklet.TaskletStep.open(TaskletStep.java:293)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:224)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:153)
	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:68)
	at org.springframework.batch.core.job.flow.support.state.StepState.handle(StepState.java:68)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.resume(SimpleFlow.java:167)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.start(SimpleFlow.java:142)
	at org.springframework.batch.core.job.flow.FlowJob.doExecute(FlowJob.java:137)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:316)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:157)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:148)
	at org.springframework.batch.core.launch.support.TaskExecutorJobLauncher.run(TaskExecutorJobLauncher.java:70)
	at com.yuripe.batchType0A.Controller.BatchController.importFileAndRun(BatchController.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:563)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalStateException: Input resource must be readable (reader is in 'strict' mode): class path resource [inputFiles/]
	at org.springframework.batch.item.file.FlatFileItemReader.doOpen(FlatFileItemReader.java:270)
	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.open(AbstractItemCountingItemStreamItemReader.java:149)
	... 101 common frames omitted
2023-05-24 19:18:59,419 INFO org.springframework.batch.core.step.AbstractStep [http-nio-8080-exec-2] Step: [step1] executed in 19ms
2023-05-24 19:19:18,516 INFO com.yuripe.batchType0A.Listener.JobFailureNotificationListener [http-nio-8080-exec-2] !!! JOB FAILED! Time to verify the results
2023-05-24 19:19:21,611 INFO org.springframework.batch.core.launch.support.SimpleJobLauncher [http-nio-8080-exec-2] Job: [FlowJob: [name=importUserJob]] completed with the following parameters: [{'filePattern':'{value=FILE13.txt, type=class java.lang.String, identifying=true}'}] and the following status: [FAILED] in 45s650ms
2023-05-24 19:19:43,731 INFO org.springframework.batch.core.launch.support.SimpleJobLauncher [http-nio-8080-exec-3] Job: [FlowJob: [name=importUserJob]] launched with the following parameters: [{'filePattern':'{value=FILE13.txt, type=class java.lang.String, identifying=true}'}]
2023-05-24 19:19:47,006 INFO org.springframework.batch.core.job.SimpleStepHandler [http-nio-8080-exec-3] Executing step: [step1]
2023-05-24 19:19:47,016 ERROR org.springframework.batch.core.step.AbstractStep [http-nio-8080-exec-3] Encountered an error executing step step1 in job importUserJob
org.springframework.batch.item.ItemStreamException: Failed to initialize the reader
	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.open(AbstractItemCountingItemStreamItemReader.java:152)
	at org.springframework.batch.item.support.CompositeItemStream.open(CompositeItemStream.java:124)
	at org.springframework.batch.core.step.tasklet.TaskletStep.open(TaskletStep.java:293)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:224)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:153)
	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:68)
	at org.springframework.batch.core.job.flow.support.state.StepState.handle(StepState.java:68)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.resume(SimpleFlow.java:167)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.start(SimpleFlow.java:142)
	at org.springframework.batch.core.job.flow.FlowJob.doExecute(FlowJob.java:137)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:316)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:157)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:148)
	at org.springframework.batch.core.launch.support.TaskExecutorJobLauncher.run(TaskExecutorJobLauncher.java:70)
	at com.yuripe.batchType0A.Controller.BatchController.importFileAndRun(BatchController.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:563)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalStateException: Input resource must be readable (reader is in 'strict' mode): class path resource [inputFiles/]
	at org.springframework.batch.item.file.FlatFileItemReader.doOpen(FlatFileItemReader.java:270)
	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.open(AbstractItemCountingItemStreamItemReader.java:149)
	... 101 common frames omitted
2023-05-24 19:19:47,020 INFO org.springframework.batch.core.step.AbstractStep [http-nio-8080-exec-3] Step: [step1] executed in 13ms
2023-05-24 19:19:54,356 INFO com.yuripe.batchType0A.Listener.JobFailureNotificationListener [http-nio-8080-exec-3] !!! JOB FAILED! Time to verify the results
2023-05-24 19:19:56,876 INFO org.springframework.batch.core.launch.support.SimpleJobLauncher [http-nio-8080-exec-3] Job: [FlowJob: [name=importUserJob]] completed with the following parameters: [{'filePattern':'{value=FILE13.txt, type=class java.lang.String, identifying=true}'}] and the following status: [FAILED] in 3s299ms
2023-05-24 19:23:48,313 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.0.Final
2023-05-24 19:23:48,361 INFO com.yuripe.batchType0A.BatchType0AApplication [main] Starting BatchType0AApplication using Java 17.0.2 with PID 20980 (C:\Users\yurip\git\batch0A\batchType0A\target\classes started by yurip in C:\Users\yurip\git\batch0A\batchType0A)
2023-05-24 19:23:48,362 INFO com.yuripe.batchType0A.BatchType0AApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-05-24 19:23:48,901 INFO org.springframework.batch.core.configuration.annotation.BatchRegistrar [main] Finished Spring Batch infrastructure beans configuration in 3 ms.
2023-05-24 19:23:49,160 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2023-05-24 19:23:49,162 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-05-24 19:23:49,184 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 17 ms. Found 0 JDBC repository interfaces.
2023-05-24 19:23:49,192 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2023-05-24 19:23:49,193 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-05-24 19:23:49,199 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2023-05-24 19:23:49,874 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-05-24 19:23:49,887 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-05-24 19:23:49,888 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2023-05-24 19:23:49,888 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-05-24 19:23:49,988 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2023-05-24 19:23:49,989 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1572 ms
2023-05-24 19:23:50,147 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-05-24 19:23:50,224 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 6.1.7.Final
2023-05-24 19:23:50,508 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2023-05-24 19:23:50,527 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@27896d3b
2023-05-24 19:23:50,527 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@27896d3b
2023-05-24 19:23:50,527 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@27896d3b
2023-05-24 19:23:50,528 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3ed7dd70
2023-05-24 19:23:50,528 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3ed7dd70
2023-05-24 19:23:50,528 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6f3b13d0
2023-05-24 19:23:50,529 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6f3b13d0
2023-05-24 19:23:50,529 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2964511
2023-05-24 19:23:50,529 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2964511
2023-05-24 19:23:50,529 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.BasicTypeReference@6e9a10cd
2023-05-24 19:23:50,530 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.BasicTypeReference@6e9a10cd
2023-05-24 19:23:50,530 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6e9a10cd
2023-05-24 19:23:50,531 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BasicTypeReference@69ba3f4e
2023-05-24 19:23:50,531 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@69ba3f4e
2023-05-24 19:23:50,531 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BasicTypeReference@69ba3f4e
2023-05-24 19:23:50,531 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@579846cc
2023-05-24 19:23:50,531 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@579846cc
2023-05-24 19:23:50,532 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@579846cc
2023-05-24 19:23:50,532 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@579846cc
2023-05-24 19:23:50,532 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.BasicTypeReference@a826ff8
2023-05-24 19:23:50,532 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BasicTypeReference@71f0806b
2023-05-24 19:23:50,532 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@71f0806b
2023-05-24 19:23:50,532 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@49889154
2023-05-24 19:23:50,532 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5c33008f
2023-05-24 19:23:50,532 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.BasicTypeReference@45d7495e
2023-05-24 19:23:50,533 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.BasicTypeReference@45d7495e
2023-05-24 19:23:50,533 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@45d7495e
2023-05-24 19:23:50,533 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.BasicTypeReference@30517a57
2023-05-24 19:23:50,533 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.BasicTypeReference@30517a57
2023-05-24 19:23:50,533 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@30517a57
2023-05-24 19:23:50,533 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.BasicTypeReference@3dde5f38
2023-05-24 19:23:50,533 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.BasicTypeReference@3dde5f38
2023-05-24 19:23:50,533 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3dde5f38
2023-05-24 19:23:50,534 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.BasicTypeReference@79ad1774
2023-05-24 19:23:50,534 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.BasicTypeReference@79ad1774
2023-05-24 19:23:50,534 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@79ad1774
2023-05-24 19:23:50,534 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.BasicTypeReference@64f3ca6
2023-05-24 19:23:50,534 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.BasicTypeReference@64f3ca6
2023-05-24 19:23:50,534 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@64f3ca6
2023-05-24 19:23:50,535 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3df77dfa
2023-05-24 19:23:50,535 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3df77dfa
2023-05-24 19:23:50,535 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@721fc2e3
2023-05-24 19:23:50,535 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@721fc2e3
2023-05-24 19:23:50,535 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.BasicTypeReference@63187d63
2023-05-24 19:23:50,535 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.BasicTypeReference@63187d63
2023-05-24 19:23:50,536 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@63187d63
2023-05-24 19:23:50,537 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1ccdc7aa
2023-05-24 19:23:50,537 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.BasicTypeReference@1a536164
2023-05-24 19:23:50,537 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1a536164
2023-05-24 19:23:50,537 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1657b017
2023-05-24 19:23:50,538 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.BasicTypeReference@368424db
2023-05-24 19:23:50,538 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@368424db
2023-05-24 19:23:50,538 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.BasicTypeReference@368424db
2023-05-24 19:23:50,538 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@44864536
2023-05-24 19:23:50,538 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@44864536
2023-05-24 19:23:50,539 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@44864536
2023-05-24 19:23:50,539 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.BasicTypeReference@455f4483
2023-05-24 19:23:50,539 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6e239337
2023-05-24 19:23:50,539 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.BasicTypeReference@7996d0d4
2023-05-24 19:23:50,540 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7996d0d4
2023-05-24 19:23:50,540 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@fcf9525
2023-05-24 19:23:50,541 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@fcf9525
2023-05-24 19:23:50,541 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@300bb303
2023-05-24 19:23:50,541 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4243341e
2023-05-24 19:23:50,541 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@d1c5cf2
2023-05-24 19:23:50,541 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7e0986c9
2023-05-24 19:23:50,541 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1377b1a0
2023-05-24 19:23:50,541 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@48cf8414
2023-05-24 19:23:50,541 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@27dbaa33
2023-05-24 19:23:50,543 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@27dbaa33
2023-05-24 19:23:50,543 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@15d65fcf
2023-05-24 19:23:50,543 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@15d65fcf
2023-05-24 19:23:50,543 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3b021664
2023-05-24 19:23:50,543 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3b021664
2023-05-24 19:23:50,543 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@f59da34
2023-05-24 19:23:50,543 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@f59da34
2023-05-24 19:23:50,543 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@752973de
2023-05-24 19:23:50,544 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@752973de
2023-05-24 19:23:50,544 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@52a67293
2023-05-24 19:23:50,544 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@793cef95
2023-05-24 19:23:50,544 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@38f502fc
2023-05-24 19:23:50,544 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@38f502fc
2023-05-24 19:23:50,544 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@67c21bf
2023-05-24 19:23:50,545 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@67c21bf
2023-05-24 19:23:50,545 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@67afe909
2023-05-24 19:23:50,545 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@79f1e22e
2023-05-24 19:23:50,545 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.BasicTypeReference@6903ed0e
2023-05-24 19:23:50,545 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6903ed0e
2023-05-24 19:23:50,545 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.BasicTypeReference@e154848
2023-05-24 19:23:50,545 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@e154848
2023-05-24 19:23:50,546 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@16ea0f22
2023-05-24 19:23:50,546 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@16ea0f22
2023-05-24 19:23:50,546 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@16ea0f22
2023-05-24 19:23:50,546 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@60fc7f43
2023-05-24 19:23:50,546 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@60fc7f43
2023-05-24 19:23:50,546 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@60fc7f43
2023-05-24 19:23:50,546 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@16e195cf
2023-05-24 19:23:50,546 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3212d853
2023-05-24 19:23:50,547 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration instant -> org.hibernate.type.BasicTypeReference@74c7522c
2023-05-24 19:23:50,547 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@74c7522c
2023-05-24 19:23:50,547 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@77c23d90
2023-05-24 19:23:50,547 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@77c23d90
2023-05-24 19:23:50,547 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@77c23d90
2023-05-24 19:23:50,547 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6d17914a
2023-05-24 19:23:50,548 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@49631cfb
2023-05-24 19:23:50,548 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.BasicTypeReference@77b71c9
2023-05-24 19:23:50,548 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@77b71c9
2023-05-24 19:23:50,548 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.BasicTypeReference@6133e20b
2023-05-24 19:23:50,548 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6133e20b
2023-05-24 19:23:50,548 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6133e20b
2023-05-24 19:23:50,548 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.BasicTypeReference@30ffb2a6
2023-05-24 19:23:50,549 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@30ffb2a6
2023-05-24 19:23:50,549 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@612af486
2023-05-24 19:23:50,549 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@612af486
2023-05-24 19:23:50,549 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3d033453
2023-05-24 19:23:50,550 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3d033453
2023-05-24 19:23:50,550 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@43deba42
2023-05-24 19:23:50,550 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@43deba42
2023-05-24 19:23:50,550 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.BasicTypeReference@e795a1d
2023-05-24 19:23:50,550 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@e795a1d
2023-05-24 19:23:50,550 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@38c10190
2023-05-24 19:23:50,557 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@58e03769
2023-05-24 19:23:50,557 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@58e03769
2023-05-24 19:23:50,560 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.JavaObjectType@f849027
2023-05-24 19:23:50,560 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@f849027
2023-05-24 19:23:50,561 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration null -> org.hibernate.type.NullType@4a9b92c6
2023-05-24 19:23:50,561 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6eed46e9
2023-05-24 19:23:50,561 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d20616a
2023-05-24 19:23:50,561 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6ad6ae45
2023-05-24 19:23:50,561 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7c4d1c7b
2023-05-24 19:23:50,561 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7893c715
2023-05-24 19:23:50,561 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@36f6d25c
2023-05-24 19:23:50,561 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@690df641
2023-05-24 19:23:50,562 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7db791df
2023-05-24 19:23:50,601 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-05-24 19:23:50,977 INFO com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@69c33ea2
2023-05-24 19:23:50,986 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-05-24 19:23:51,007 INFO SQL dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-05-24 19:23:51,009 WARN org.hibernate.orm.deprecation [main] HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2023-05-24 19:23:51,036 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6dd38df2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@99c3cee)
2023-05-24 19:23:51,036 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57b711b6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2db461b5)
2023-05-24 19:23:51,036 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c79c5ec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@34eaf9c1)
2023-05-24 19:23:51,036 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5bbf744b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55881f40)
2023-05-24 19:23:51,036 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@474ce6b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@248b2b61)
2023-05-24 19:23:51,037 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4b61e97) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@11d1735e)
2023-05-24 19:23:51,037 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@31082efa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ca5cb99)
2023-05-24 19:23:51,037 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7853363c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6282f1eb)
2023-05-24 19:23:51,037 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@120d6cbf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70169464)
2023-05-24 19:23:51,038 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-05-24 19:23:51,038 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-05-24 19:23:51,039 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-05-24 19:23:51,041 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-24 19:23:51,041 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-24 19:23:51,044 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration null -> org.hibernate.type.NullType@68c4db77
2023-05-24 19:23:51,044 DEBUG org.hibernate.type.BasicTypeRegistry [main] Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4a9b92c6`
2023-05-24 19:23:51,048 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2023-05-24 19:23:51,048 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-24 19:23:51,048 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-24 19:23:51,049 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2023-05-24 19:23:51,049 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-24 19:23:51,049 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-24 19:23:51,050 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27ec0d06] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2676d96a]
2023-05-24 19:23:51,308 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27ec0d06] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@69d021c1]
2023-05-24 19:23:51,342 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-05-24 19:23:51,357 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@69d021c1] for TypeConfiguration
2023-05-24 19:23:51,360 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-05-24 19:23:51,441 INFO org.springframework.batch.core.repository.support.JobRepositoryFactoryBean [main] No database type set, using meta data indicating: MYSQL
2023-05-24 19:23:51,455 INFO org.springframework.batch.core.launch.support.SimpleJobLauncher [main] No TaskExecutor has been set, defaulting to synchronous executor.
2023-05-24 19:23:54,409 INFO org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor [main] No Micrometer observation registry found, defaulting to ObservationRegistry.NOOP
2023-05-24 19:23:54,433 INFO org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor [main] No Micrometer observation registry found, defaulting to ObservationRegistry.NOOP
2023-05-24 19:23:54,461 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-05-24 19:23:54,496 WARN org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration [main] 

Using generated security password: 3ec3eff9-19ff-4b98-977a-a595d00f7ad8

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2023-05-24 19:23:54,587 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@55c341d0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@348bd063, org.springframework.security.web.context.SecurityContextHolderFilter@40edc64e, org.springframework.security.web.header.HeaderWriterFilter@70f5f57d, org.springframework.web.filter.CorsFilter@3d73cd78, org.springframework.security.web.authentication.logout.LogoutFilter@79c849c7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@372f7bc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@49bc71b4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@acd115d, org.springframework.security.web.access.ExceptionTranslationFilter@626766fd]
2023-05-24 19:23:55,097 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8080"]
2023-05-24 19:23:55,119 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-05-24 19:23:55,132 INFO com.yuripe.batchType0A.BatchType0AApplication [main] Started BatchType0AApplication in 7.141 seconds (process running for 8.301)
2023-05-24 19:23:59,640 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8080-exec-3] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-05-24 19:23:59,640 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8080-exec-3] Initializing Servlet 'dispatcherServlet'
2023-05-24 19:23:59,641 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8080-exec-3] Completed initialization in 1 ms
2023-05-24 19:23:59,819 INFO org.springframework.batch.core.launch.support.SimpleJobLauncher [http-nio-8080-exec-3] Job: [FlowJob: [name=importUserJob]] launched with the following parameters: [{'filePattern':'{value=FILE13.txt, type=class java.lang.String, identifying=true}'}]
2023-05-24 19:24:07,644 INFO org.springframework.batch.core.job.SimpleStepHandler [http-nio-8080-exec-3] Executing step: [step1]
2023-05-24 19:24:07,654 WARN org.springframework.batch.item.file.FlatFileItemReader [http-nio-8080-exec-3] Input resource is not readable class path resource [inputFiles/]
2023-05-24 19:24:07,670 ERROR org.springframework.batch.core.step.AbstractStep [http-nio-8080-exec-3] Encountered an error executing step step1 in job importUserJob
java.lang.NullPointerException: Cannot invoke "com.yuripe.batchType0A.batchprocessing.Model.InsurancePolicyCustom.getPolicyNumber()" because "InsurancePolicy" is null
	at com.yuripe.batchType0A.Reader.SimpleReader.doRead(SimpleReader.java:18)
	at com.yuripe.batchType0A.Reader.SimpleReader.doRead(SimpleReader.java:1)
	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:95)
	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:110)
	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:189)
	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:137)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:362)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:206)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:139)
	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:129)
	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:389)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:313)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:256)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:362)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:206)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:139)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:241)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:227)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:153)
	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:68)
	at org.springframework.batch.core.job.flow.support.state.StepState.handle(StepState.java:68)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.resume(SimpleFlow.java:167)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.start(SimpleFlow.java:142)
	at org.springframework.batch.core.job.flow.FlowJob.doExecute(FlowJob.java:137)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:316)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:157)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:148)
	at org.springframework.batch.core.launch.support.TaskExecutorJobLauncher.run(TaskExecutorJobLauncher.java:70)
	at com.yuripe.batchType0A.Controller.BatchController.importFileAndRun(BatchController.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:563)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-24 19:24:07,675 INFO org.springframework.batch.core.step.AbstractStep [http-nio-8080-exec-3] Step: [step1] executed in 31ms
2023-05-24 19:24:11,063 INFO com.yuripe.batchType0A.Listener.JobFailureNotificationListener [http-nio-8080-exec-3] !!! JOB FAILED! Time to verify the results
2023-05-24 19:24:13,675 INFO org.springframework.batch.core.launch.support.SimpleJobLauncher [http-nio-8080-exec-3] Job: [FlowJob: [name=importUserJob]] completed with the following parameters: [{'filePattern':'{value=FILE13.txt, type=class java.lang.String, identifying=true}'}] and the following status: [FAILED] in 7s856ms
2023-05-24 19:30:15,930 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.0.Final
2023-05-24 19:30:15,967 INFO com.yuripe.batchType0A.BatchType0AApplication [main] Starting BatchType0AApplication using Java 17.0.2 with PID 15472 (C:\Users\yurip\git\batch0A\batchType0A\target\classes started by yurip in C:\Users\yurip\git\batch0A\batchType0A)
2023-05-24 19:30:15,969 INFO com.yuripe.batchType0A.BatchType0AApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-05-24 19:30:16,432 INFO org.springframework.batch.core.configuration.annotation.BatchRegistrar [main] Finished Spring Batch infrastructure beans configuration in 4 ms.
2023-05-24 19:30:16,713 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2023-05-24 19:30:16,715 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-05-24 19:30:16,732 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 12 ms. Found 0 JDBC repository interfaces.
2023-05-24 19:30:16,739 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2023-05-24 19:30:16,741 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-05-24 19:30:16,747 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 3 ms. Found 0 JPA repository interfaces.
2023-05-24 19:30:17,153 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-05-24 19:30:17,160 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-05-24 19:30:17,161 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2023-05-24 19:30:17,161 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-05-24 19:30:17,253 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2023-05-24 19:30:17,253 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1237 ms
2023-05-24 19:30:17,404 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-05-24 19:30:17,454 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 6.1.7.Final
2023-05-24 19:30:17,698 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2023-05-24 19:30:17,712 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@cec590c
2023-05-24 19:30:17,712 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@cec590c
2023-05-24 19:30:17,712 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@cec590c
2023-05-24 19:30:17,712 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1570cad0
2023-05-24 19:30:17,712 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1570cad0
2023-05-24 19:30:17,713 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@21090c88
2023-05-24 19:30:17,713 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@21090c88
2023-05-24 19:30:17,713 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@d62472f
2023-05-24 19:30:17,713 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@d62472f
2023-05-24 19:30:17,713 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.BasicTypeReference@63a84bb6
2023-05-24 19:30:17,713 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.BasicTypeReference@63a84bb6
2023-05-24 19:30:17,714 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@63a84bb6
2023-05-24 19:30:17,714 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BasicTypeReference@65d73bd
2023-05-24 19:30:17,715 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@65d73bd
2023-05-24 19:30:17,715 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BasicTypeReference@65d73bd
2023-05-24 19:30:17,715 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@27896d3b
2023-05-24 19:30:17,715 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@27896d3b
2023-05-24 19:30:17,715 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@27896d3b
2023-05-24 19:30:17,715 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@27896d3b
2023-05-24 19:30:17,716 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.BasicTypeReference@3ed7dd70
2023-05-24 19:30:17,716 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BasicTypeReference@6f3b13d0
2023-05-24 19:30:17,716 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6f3b13d0
2023-05-24 19:30:17,716 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2964511
2023-05-24 19:30:17,716 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6e9a10cd
2023-05-24 19:30:17,716 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.BasicTypeReference@6ea66c33
2023-05-24 19:30:17,716 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.BasicTypeReference@6ea66c33
2023-05-24 19:30:17,717 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6ea66c33
2023-05-24 19:30:17,717 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.BasicTypeReference@59b447a4
2023-05-24 19:30:17,717 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.BasicTypeReference@59b447a4
2023-05-24 19:30:17,717 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@59b447a4
2023-05-24 19:30:17,717 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.BasicTypeReference@69ba3f4e
2023-05-24 19:30:17,717 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.BasicTypeReference@69ba3f4e
2023-05-24 19:30:17,717 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@69ba3f4e
2023-05-24 19:30:17,717 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.BasicTypeReference@579846cc
2023-05-24 19:30:17,717 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.BasicTypeReference@579846cc
2023-05-24 19:30:17,717 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@579846cc
2023-05-24 19:30:17,718 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.BasicTypeReference@a826ff8
2023-05-24 19:30:17,718 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.BasicTypeReference@a826ff8
2023-05-24 19:30:17,718 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@a826ff8
2023-05-24 19:30:17,718 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@71f0806b
2023-05-24 19:30:17,718 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@71f0806b
2023-05-24 19:30:17,718 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@49889154
2023-05-24 19:30:17,718 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@49889154
2023-05-24 19:30:17,718 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.BasicTypeReference@5c33008f
2023-05-24 19:30:17,718 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.BasicTypeReference@5c33008f
2023-05-24 19:30:17,718 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5c33008f
2023-05-24 19:30:17,719 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@45d7495e
2023-05-24 19:30:17,719 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.BasicTypeReference@30517a57
2023-05-24 19:30:17,719 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@30517a57
2023-05-24 19:30:17,719 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3dde5f38
2023-05-24 19:30:17,719 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.BasicTypeReference@79ad1774
2023-05-24 19:30:17,719 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@79ad1774
2023-05-24 19:30:17,719 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.BasicTypeReference@79ad1774
2023-05-24 19:30:17,720 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@64f3ca6
2023-05-24 19:30:17,720 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@64f3ca6
2023-05-24 19:30:17,720 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@64f3ca6
2023-05-24 19:30:17,720 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.BasicTypeReference@3df77dfa
2023-05-24 19:30:17,720 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@721fc2e3
2023-05-24 19:30:17,720 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.BasicTypeReference@63187d63
2023-05-24 19:30:17,720 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@63187d63
2023-05-24 19:30:17,720 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1ccdc7aa
2023-05-24 19:30:17,720 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1ccdc7aa
2023-05-24 19:30:17,720 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1a536164
2023-05-24 19:30:17,720 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1657b017
2023-05-24 19:30:17,720 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@368424db
2023-05-24 19:30:17,720 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@44864536
2023-05-24 19:30:17,721 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@455f4483
2023-05-24 19:30:17,723 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6e239337
2023-05-24 19:30:17,723 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7996d0d4
2023-05-24 19:30:17,724 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7996d0d4
2023-05-24 19:30:17,724 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fcf9525
2023-05-24 19:30:17,724 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fcf9525
2023-05-24 19:30:17,724 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@300bb303
2023-05-24 19:30:17,724 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@300bb303
2023-05-24 19:30:17,724 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4243341e
2023-05-24 19:30:17,724 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4243341e
2023-05-24 19:30:17,725 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@d1c5cf2
2023-05-24 19:30:17,725 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@d1c5cf2
2023-05-24 19:30:17,725 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7e0986c9
2023-05-24 19:30:17,725 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1377b1a0
2023-05-24 19:30:17,725 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@48cf8414
2023-05-24 19:30:17,725 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@48cf8414
2023-05-24 19:30:17,725 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@27dbaa33
2023-05-24 19:30:17,725 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@27dbaa33
2023-05-24 19:30:17,725 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@15d65fcf
2023-05-24 19:30:17,725 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3b021664
2023-05-24 19:30:17,726 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.BasicTypeReference@f59da34
2023-05-24 19:30:17,726 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@f59da34
2023-05-24 19:30:17,726 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.BasicTypeReference@752973de
2023-05-24 19:30:17,726 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@752973de
2023-05-24 19:30:17,726 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@52a67293
2023-05-24 19:30:17,726 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@52a67293
2023-05-24 19:30:17,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@52a67293
2023-05-24 19:30:17,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@793cef95
2023-05-24 19:30:17,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@793cef95
2023-05-24 19:30:17,727 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@793cef95
2023-05-24 19:30:17,728 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@38f502fc
2023-05-24 19:30:17,728 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@67c21bf
2023-05-24 19:30:17,728 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration instant -> org.hibernate.type.BasicTypeReference@67afe909
2023-05-24 19:30:17,729 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@67afe909
2023-05-24 19:30:17,729 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@79f1e22e
2023-05-24 19:30:17,729 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@79f1e22e
2023-05-24 19:30:17,729 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@79f1e22e
2023-05-24 19:30:17,729 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6903ed0e
2023-05-24 19:30:17,729 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@e154848
2023-05-24 19:30:17,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.BasicTypeReference@16ea0f22
2023-05-24 19:30:17,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@16ea0f22
2023-05-24 19:30:17,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.BasicTypeReference@60fc7f43
2023-05-24 19:30:17,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@60fc7f43
2023-05-24 19:30:17,732 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@60fc7f43
2023-05-24 19:30:17,732 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.BasicTypeReference@16e195cf
2023-05-24 19:30:17,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@16e195cf
2023-05-24 19:30:17,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3212d853
2023-05-24 19:30:17,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3212d853
2023-05-24 19:30:17,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@74c7522c
2023-05-24 19:30:17,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@74c7522c
2023-05-24 19:30:17,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@77c23d90
2023-05-24 19:30:17,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@77c23d90
2023-05-24 19:30:17,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.BasicTypeReference@6d17914a
2023-05-24 19:30:17,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6d17914a
2023-05-24 19:30:17,733 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@49631cfb
2023-05-24 19:30:17,747 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6b24ddd7
2023-05-24 19:30:17,748 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6b24ddd7
2023-05-24 19:30:17,749 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.JavaObjectType@2d24cdd9
2023-05-24 19:30:17,749 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2d24cdd9
2023-05-24 19:30:17,750 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration null -> org.hibernate.type.NullType@40f9f60d
2023-05-24 19:30:17,750 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6bd7439d
2023-05-24 19:30:17,751 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@628ba266
2023-05-24 19:30:17,751 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1231a1be
2023-05-24 19:30:17,751 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1d77746b
2023-05-24 19:30:17,751 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4ced17f3
2023-05-24 19:30:17,751 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@734a149a
2023-05-24 19:30:17,751 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6ce9771c
2023-05-24 19:30:17,751 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4a9b92c6
2023-05-24 19:30:17,789 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-05-24 19:30:18,084 INFO com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2efcc0b3
2023-05-24 19:30:18,087 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-05-24 19:30:18,107 INFO SQL dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-05-24 19:30:18,109 WARN org.hibernate.orm.deprecation [main] HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2023-05-24 19:30:18,134 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@70592729) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2fdf7da2)
2023-05-24 19:30:18,135 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@43b172e3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39695803)
2023-05-24 19:30:18,135 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@304068) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54d60fa1)
2023-05-24 19:30:18,135 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1cb849b2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6fe2a366)
2023-05-24 19:30:18,135 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6dd38df2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@99c3cee)
2023-05-24 19:30:18,135 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57b711b6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2db461b5)
2023-05-24 19:30:18,135 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c79c5ec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@34eaf9c1)
2023-05-24 19:30:18,135 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5bbf744b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55881f40)
2023-05-24 19:30:18,135 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@474ce6b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@248b2b61)
2023-05-24 19:30:18,136 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-05-24 19:30:18,136 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-05-24 19:30:18,137 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-05-24 19:30:18,138 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-24 19:30:18,138 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-24 19:30:18,140 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration null -> org.hibernate.type.NullType@156ff70f
2023-05-24 19:30:18,140 DEBUG org.hibernate.type.BasicTypeRegistry [main] Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@40f9f60d`
2023-05-24 19:30:18,143 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2023-05-24 19:30:18,143 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-24 19:30:18,143 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-24 19:30:18,143 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2023-05-24 19:30:18,143 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-24 19:30:18,143 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-24 19:30:18,144 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36d7a68a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@42dd7d82]
2023-05-24 19:30:18,385 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36d7a68a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1fba3fd6]
2023-05-24 19:30:18,417 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-05-24 19:30:18,434 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1fba3fd6] for TypeConfiguration
2023-05-24 19:30:18,438 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-05-24 19:30:18,489 INFO org.springframework.batch.core.repository.support.JobRepositoryFactoryBean [main] No database type set, using meta data indicating: MYSQL
2023-05-24 19:30:18,506 INFO org.springframework.batch.core.launch.support.SimpleJobLauncher [main] No TaskExecutor has been set, defaulting to synchronous executor.
2023-05-24 19:30:18,553 INFO org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor [main] No Micrometer observation registry found, defaulting to ObservationRegistry.NOOP
2023-05-24 19:30:18,562 INFO org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor [main] No Micrometer observation registry found, defaulting to ObservationRegistry.NOOP
2023-05-24 19:30:18,592 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-05-24 19:30:18,616 WARN org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration [main] 

Using generated security password: b9b0f8af-cd2b-412d-a28d-9a57e5a36275

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2023-05-24 19:30:18,695 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@35840ecc, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@67fd2e17, org.springframework.security.web.context.SecurityContextHolderFilter@5847010, org.springframework.security.web.header.HeaderWriterFilter@72bdbfe9, org.springframework.web.filter.CorsFilter@65a2e14e, org.springframework.security.web.authentication.logout.LogoutFilter@117069f2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46fdfaeb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4bab804f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5e9f1a4c, org.springframework.security.web.access.ExceptionTranslationFilter@6ae32ff0]
2023-05-24 19:30:19,092 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8080"]
2023-05-24 19:30:19,112 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-05-24 19:30:19,123 INFO com.yuripe.batchType0A.BatchType0AApplication [main] Started BatchType0AApplication in 3.491 seconds (process running for 10.136)
2023-05-24 19:30:29,051 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-05-24 19:30:29,052 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-05-24 19:30:29,053 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8080-exec-1] Completed initialization in 1 ms
2023-05-24 19:30:29,240 INFO org.springframework.batch.core.launch.support.SimpleJobLauncher [http-nio-8080-exec-1] Job: [FlowJob: [name=importUserJob]] launched with the following parameters: [{'filePattern':'{value=FILE13.txt, type=class java.lang.String, identifying=true}'}]
2023-05-24 19:30:36,165 INFO org.springframework.batch.core.job.SimpleStepHandler [http-nio-8080-exec-1] Executing step: [step1]
2023-05-24 19:31:49,084 ERROR org.springframework.batch.core.step.AbstractStep [http-nio-8080-exec-1] Encountered an error executing step step1 in job importUserJob
org.springframework.batch.item.ItemStreamException: Failed to initialize the reader
	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.open(AbstractItemCountingItemStreamItemReader.java:152)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:137)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:124)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at org.springframework.batch.item.file.FlatFileItemReader$$SpringCGLIB$$0.open(<generated>)
	at org.springframework.batch.item.support.CompositeItemStream.open(CompositeItemStream.java:124)
	at org.springframework.batch.core.step.tasklet.TaskletStep.open(TaskletStep.java:293)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:224)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:153)
	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:68)
	at org.springframework.batch.core.job.flow.support.state.StepState.handle(StepState.java:68)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.resume(SimpleFlow.java:167)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.start(SimpleFlow.java:142)
	at org.springframework.batch.core.job.flow.FlowJob.doExecute(FlowJob.java:137)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:316)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:157)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:148)
	at org.springframework.batch.core.launch.support.TaskExecutorJobLauncher.run(TaskExecutorJobLauncher.java:70)
	at com.yuripe.batchType0A.Controller.BatchController.importFileAndRun(BatchController.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:563)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalStateException: Input resource must exist (reader is in 'strict' mode): class path resource [inputFiles/FILE13.txt]
	at org.springframework.batch.item.file.FlatFileItemReader.doOpen(FlatFileItemReader.java:262)
	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.open(AbstractItemCountingItemStreamItemReader.java:149)
	... 115 common frames omitted
2023-05-24 19:31:57,730 INFO org.springframework.batch.core.step.AbstractStep [http-nio-8080-exec-1] Step: [step1] executed in 1m21s564ms
2023-05-24 19:31:59,751 INFO com.yuripe.batchType0A.Listener.JobFailureNotificationListener [http-nio-8080-exec-1] !!! JOB FAILED! Time to verify the results
2023-05-24 19:32:01,679 INFO org.springframework.batch.core.launch.support.SimpleJobLauncher [http-nio-8080-exec-1] Job: [FlowJob: [name=importUserJob]] completed with the following parameters: [{'filePattern':'{value=FILE13.txt, type=class java.lang.String, identifying=true}'}] and the following status: [FAILED] in 1m28s493ms
2023-05-24 19:32:14,027 INFO org.springframework.batch.core.launch.support.SimpleJobLauncher [http-nio-8080-exec-3] Job: [FlowJob: [name=importUserJob]] launched with the following parameters: [{'filePattern':'{value=FILE13.txt, type=class java.lang.String, identifying=true}'}]
2023-05-24 19:32:25,580 INFO org.springframework.batch.core.job.SimpleStepHandler [http-nio-8080-exec-3] Executing step: [step1]
2023-05-24 19:32:38,394 ERROR org.springframework.batch.core.step.AbstractStep [http-nio-8080-exec-3] Encountered an error executing step step1 in job importUserJob
org.springframework.batch.item.file.FlatFileParseException: The input has validation failed. Data is '{
	  "data": [{
	    "expireDate": "Wed Nov 02 00:00:00 CET 2022","effectiveDate": "Sat Dec 07 00:00:00 CET 2024","policyNumber": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa"
	  }]
}'
	at com.yuripe.batchType0A.Reader.SimpleReader.doRead(SimpleReader.java:25)
	at com.yuripe.batchType0A.Reader.SimpleReader.doRead(SimpleReader.java:1)
	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:95)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:137)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:124)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at org.springframework.batch.item.file.FlatFileItemReader$$SpringCGLIB$$0.read(<generated>)
	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:110)
	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:189)
	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:137)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:362)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:206)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:139)
	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:129)
	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:389)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:313)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:256)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:362)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:206)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:139)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:241)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:227)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:153)
	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:68)
	at org.springframework.batch.core.job.flow.support.state.StepState.handle(StepState.java:68)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.resume(SimpleFlow.java:167)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.start(SimpleFlow.java:142)
	at org.springframework.batch.core.job.flow.FlowJob.doExecute(FlowJob.java:137)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:316)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:157)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:148)
	at org.springframework.batch.core.launch.support.TaskExecutorJobLauncher.run(TaskExecutorJobLauncher.java:70)
	at com.yuripe.batchType0A.Controller.BatchController.importFileAndRun(BatchController.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:563)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-24 19:33:26,600 INFO org.springframework.batch.core.step.AbstractStep [http-nio-8080-exec-3] Step: [step1] executed in 1m1s19ms
2023-05-24 19:33:28,855 INFO com.yuripe.batchType0A.Listener.JobFailureNotificationListener [http-nio-8080-exec-3] !!! JOB FAILED! Time to verify the results
2023-05-24 19:33:30,890 INFO org.springframework.batch.core.launch.support.SimpleJobLauncher [http-nio-8080-exec-3] Job: [FlowJob: [name=importUserJob]] completed with the following parameters: [{'filePattern':'{value=FILE13.txt, type=class java.lang.String, identifying=true}'}] and the following status: [FAILED] in 1m12s583ms
2023-05-24 19:34:06,433 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 8.0.0.Final
2023-05-24 19:34:06,473 INFO com.yuripe.batchType0A.BatchType0AApplication [main] Starting BatchType0AApplication using Java 17.0.2 with PID 7144 (C:\Users\yurip\git\batch0A\batchType0A\target\classes started by yurip in C:\Users\yurip\git\batch0A\batchType0A)
2023-05-24 19:34:06,474 INFO com.yuripe.batchType0A.BatchType0AApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-05-24 19:34:06,943 INFO org.springframework.batch.core.configuration.annotation.BatchRegistrar [main] Finished Spring Batch infrastructure beans configuration in 2 ms.
2023-05-24 19:34:07,285 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2023-05-24 19:34:07,287 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-05-24 19:34:07,309 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 18 ms. Found 0 JDBC repository interfaces.
2023-05-24 19:34:07,318 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Multiple Spring Data modules found, entering strict repository configuration mode
2023-05-24 19:34:07,320 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-05-24 19:34:07,326 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 2 ms. Found 0 JPA repository interfaces.
2023-05-24 19:34:07,772 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-05-24 19:34:07,778 INFO org.apache.coyote.http11.Http11NioProtocol [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-05-24 19:34:07,779 INFO org.apache.catalina.core.StandardService [main] Starting service [Tomcat]
2023-05-24 19:34:07,779 INFO org.apache.catalina.core.StandardEngine [main] Starting Servlet engine: [Apache Tomcat/10.1.7]
2023-05-24 19:34:07,850 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [main] Initializing Spring embedded WebApplicationContext
2023-05-24 19:34:07,851 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1329 ms
2023-05-24 19:34:07,996 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-05-24 19:34:08,054 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 6.1.7.Final
2023-05-24 19:34:08,286 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2023-05-24 19:34:08,297 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@49e479da
2023-05-24 19:34:08,297 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@49e479da
2023-05-24 19:34:08,297 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@49e479da
2023-05-24 19:34:08,297 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2d24cdd9
2023-05-24 19:34:08,297 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2d24cdd9
2023-05-24 19:34:08,298 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@30dd00b6
2023-05-24 19:34:08,298 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@30dd00b6
2023-05-24 19:34:08,298 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4656fcc5
2023-05-24 19:34:08,298 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4656fcc5
2023-05-24 19:34:08,298 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2c16677c
2023-05-24 19:34:08,298 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2c16677c
2023-05-24 19:34:08,299 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2c16677c
2023-05-24 19:34:08,299 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary -> org.hibernate.type.BasicTypeReference@e162a35
2023-05-24 19:34:08,300 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@e162a35
2023-05-24 19:34:08,300 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [B -> org.hibernate.type.BasicTypeReference@e162a35
2023-05-24 19:34:08,300 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1124910c
2023-05-24 19:34:08,300 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1124910c
2023-05-24 19:34:08,300 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@1124910c
2023-05-24 19:34:08,300 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@1124910c
2023-05-24 19:34:08,300 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration image -> org.hibernate.type.BasicTypeReference@f849027
2023-05-24 19:34:08,301 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration blob -> org.hibernate.type.BasicTypeReference@4a9869a8
2023-05-24 19:34:08,301 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4a9869a8
2023-05-24 19:34:08,301 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@75e0a54c
2023-05-24 19:34:08,301 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@40f9f60d
2023-05-24 19:34:08,301 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.BasicTypeReference@6bd7439d
2023-05-24 19:34:08,301 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration short -> org.hibernate.type.BasicTypeReference@6bd7439d
2023-05-24 19:34:08,301 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6bd7439d
2023-05-24 19:34:08,302 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration integer -> org.hibernate.type.BasicTypeReference@628ba266
2023-05-24 19:34:08,302 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration int -> org.hibernate.type.BasicTypeReference@628ba266
2023-05-24 19:34:08,302 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@628ba266
2023-05-24 19:34:08,302 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.BasicTypeReference@1231a1be
2023-05-24 19:34:08,302 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration long -> org.hibernate.type.BasicTypeReference@1231a1be
2023-05-24 19:34:08,302 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1231a1be
2023-05-24 19:34:08,302 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.BasicTypeReference@1d77746b
2023-05-24 19:34:08,303 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration float -> org.hibernate.type.BasicTypeReference@1d77746b
2023-05-24 19:34:08,303 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1d77746b
2023-05-24 19:34:08,303 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.BasicTypeReference@4ced17f3
2023-05-24 19:34:08,303 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration double -> org.hibernate.type.BasicTypeReference@4ced17f3
2023-05-24 19:34:08,303 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4ced17f3
2023-05-24 19:34:08,303 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@734a149a
2023-05-24 19:34:08,303 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@734a149a
2023-05-24 19:34:08,303 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6ce9771c
2023-05-24 19:34:08,304 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6ce9771c
2023-05-24 19:34:08,304 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character -> org.hibernate.type.BasicTypeReference@4a9b92c6
2023-05-24 19:34:08,304 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char -> org.hibernate.type.BasicTypeReference@4a9b92c6
2023-05-24 19:34:08,304 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4a9b92c6
2023-05-24 19:34:08,304 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6eed46e9
2023-05-24 19:34:08,304 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration string -> org.hibernate.type.BasicTypeReference@4d20616a
2023-05-24 19:34:08,304 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4d20616a
2023-05-24 19:34:08,305 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6ad6ae45
2023-05-24 19:34:08,305 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration characters -> org.hibernate.type.BasicTypeReference@7c4d1c7b
2023-05-24 19:34:08,305 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7c4d1c7b
2023-05-24 19:34:08,305 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [C -> org.hibernate.type.BasicTypeReference@7c4d1c7b
2023-05-24 19:34:08,305 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7893c715
2023-05-24 19:34:08,305 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@7893c715
2023-05-24 19:34:08,305 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@7893c715
2023-05-24 19:34:08,305 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration text -> org.hibernate.type.BasicTypeReference@36f6d25c
2023-05-24 19:34:08,305 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@690df641
2023-05-24 19:34:08,305 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration clob -> org.hibernate.type.BasicTypeReference@7db791df
2023-05-24 19:34:08,305 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7db791df
2023-05-24 19:34:08,306 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1bfa5a13
2023-05-24 19:34:08,306 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1bfa5a13
2023-05-24 19:34:08,306 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1b1e1f02
2023-05-24 19:34:08,306 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1da75dde
2023-05-24 19:34:08,306 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5c5f0edc
2023-05-24 19:34:08,306 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@153cfd86
2023-05-24 19:34:08,306 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7e31062c
2023-05-24 19:34:08,307 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@595fed99
2023-05-24 19:34:08,307 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7d522180
2023-05-24 19:34:08,307 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7d522180
2023-05-24 19:34:08,307 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@ff03361
2023-05-24 19:34:08,307 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@ff03361
2023-05-24 19:34:08,307 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@790654d5
2023-05-24 19:34:08,307 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@790654d5
2023-05-24 19:34:08,307 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5f935d49
2023-05-24 19:34:08,307 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5f935d49
2023-05-24 19:34:08,308 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3321291a
2023-05-24 19:34:08,308 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3321291a
2023-05-24 19:34:08,308 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3dc46f24
2023-05-24 19:34:08,308 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@76af34b5
2023-05-24 19:34:08,308 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3313463c
2023-05-24 19:34:08,309 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3313463c
2023-05-24 19:34:08,309 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@9c0d0bd
2023-05-24 19:34:08,309 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@9c0d0bd
2023-05-24 19:34:08,309 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@176333ee
2023-05-24 19:34:08,309 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@18e6b72b
2023-05-24 19:34:08,309 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration date -> org.hibernate.type.BasicTypeReference@316d30ad
2023-05-24 19:34:08,309 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@316d30ad
2023-05-24 19:34:08,310 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration time -> org.hibernate.type.BasicTypeReference@3ea75b05
2023-05-24 19:34:08,310 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3ea75b05
2023-05-24 19:34:08,310 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@30d5e37c
2023-05-24 19:34:08,310 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@30d5e37c
2023-05-24 19:34:08,310 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@30d5e37c
2023-05-24 19:34:08,311 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1da745a2
2023-05-24 19:34:08,311 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1da745a2
2023-05-24 19:34:08,311 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1da745a2
2023-05-24 19:34:08,312 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4597e6e3
2023-05-24 19:34:08,312 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@41ece227
2023-05-24 19:34:08,312 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5e3d2765
2023-05-24 19:34:08,313 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5e3d2765
2023-05-24 19:34:08,313 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7910f355
2023-05-24 19:34:08,313 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7910f355
2023-05-24 19:34:08,313 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7910f355
2023-05-24 19:34:08,313 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@34ab26a
2023-05-24 19:34:08,314 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@259195fe
2023-05-24 19:34:08,314 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration class -> org.hibernate.type.BasicTypeReference@12209826
2023-05-24 19:34:08,314 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@12209826
2023-05-24 19:34:08,314 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration currency -> org.hibernate.type.BasicTypeReference@6cd45b6c
2023-05-24 19:34:08,314 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6cd45b6c
2023-05-24 19:34:08,315 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6cd45b6c
2023-05-24 19:34:08,315 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration locale -> org.hibernate.type.BasicTypeReference@3a5b7d7e
2023-05-24 19:34:08,316 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3a5b7d7e
2023-05-24 19:34:08,316 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@13cc31ae
2023-05-24 19:34:08,316 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@13cc31ae
2023-05-24 19:34:08,316 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5bb7a59
2023-05-24 19:34:08,317 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5bb7a59
2023-05-24 19:34:08,317 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4bfa5eb9
2023-05-24 19:34:08,317 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4bfa5eb9
2023-05-24 19:34:08,317 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration url -> org.hibernate.type.BasicTypeReference@2a2b7a35
2023-05-24 19:34:08,317 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2a2b7a35
2023-05-24 19:34:08,317 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@58186f9f
2023-05-24 19:34:08,326 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5486ee92
2023-05-24 19:34:08,326 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5486ee92
2023-05-24 19:34:08,330 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration object -> org.hibernate.type.JavaObjectType@63a7781
2023-05-24 19:34:08,330 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@63a7781
2023-05-24 19:34:08,332 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration null -> org.hibernate.type.NullType@8383a14
2023-05-24 19:34:08,333 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4b691611
2023-05-24 19:34:08,333 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@395a573c
2023-05-24 19:34:08,333 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@379f9555
2023-05-24 19:34:08,333 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7e3ee128
2023-05-24 19:34:08,333 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7d64a960
2023-05-24 19:34:08,333 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@166ce247
2023-05-24 19:34:08,333 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5d92e8e2
2023-05-24 19:34:08,333 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@542c65d9
2023-05-24 19:34:08,370 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-05-24 19:34:08,676 INFO com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@681d704e
2023-05-24 19:34:08,679 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-05-24 19:34:08,699 INFO SQL dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2023-05-24 19:34:08,701 WARN org.hibernate.orm.deprecation [main] HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2023-05-24 19:34:08,724 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2b974137) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7402c49f)
2023-05-24 19:34:08,724 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d22604e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2382b2f)
2023-05-24 19:34:08,724 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13374ca6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71734463)
2023-05-24 19:34:08,724 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3f1d6a13) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7cbf4f8c)
2023-05-24 19:34:08,725 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55c46ec1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3eff6846)
2023-05-24 19:34:08,725 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6ae6d078) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6ca33187)
2023-05-24 19:34:08,725 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a67f8b4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5f1f0ee6)
2023-05-24 19:34:08,725 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@326706d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76fc5687)
2023-05-24 19:34:08,725 DEBUG org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry [main] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53fbb2b4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7434ee13)
2023-05-24 19:34:08,726 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-05-24 19:34:08,726 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-05-24 19:34:08,726 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-05-24 19:34:08,729 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-24 19:34:08,729 DEBUG org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [main] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-24 19:34:08,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration null -> org.hibernate.type.NullType@7a3a49e5
2023-05-24 19:34:08,731 DEBUG org.hibernate.type.BasicTypeRegistry [main] Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@8383a14`
2023-05-24 19:34:08,734 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2023-05-24 19:34:08,734 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-24 19:34:08,734 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-24 19:34:08,734 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2023-05-24 19:34:08,734 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-24 19:34:08,734 DEBUG org.hibernate.type.BasicTypeRegistry [main] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-24 19:34:08,735 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5534e6f1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4c6fc3e7]
2023-05-24 19:34:08,996 DEBUG org.hibernate.type.spi.TypeConfiguration$Scope [main] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5534e6f1] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@53e166ad]
2023-05-24 19:34:09,028 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-05-24 19:34:09,040 TRACE org.hibernate.type.spi.TypeConfiguration$Scope [main] Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@53e166ad] for TypeConfiguration
2023-05-24 19:34:09,043 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-05-24 19:34:09,103 INFO org.springframework.batch.core.repository.support.JobRepositoryFactoryBean [main] No database type set, using meta data indicating: MYSQL
2023-05-24 19:34:09,117 INFO org.springframework.batch.core.launch.support.SimpleJobLauncher [main] No TaskExecutor has been set, defaulting to synchronous executor.
2023-05-24 19:34:09,170 INFO org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor [main] No Micrometer observation registry found, defaulting to ObservationRegistry.NOOP
2023-05-24 19:34:09,179 INFO org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor [main] No Micrometer observation registry found, defaulting to ObservationRegistry.NOOP
2023-05-24 19:34:09,207 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-05-24 19:34:09,231 WARN org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration [main] 

Using generated security password: 66e56bc4-3f79-4ece-8b19-0dad3c5a4fb3

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2023-05-24 19:34:09,336 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@780dbed7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@31859960, org.springframework.security.web.context.SecurityContextHolderFilter@1e27bb89, org.springframework.security.web.header.HeaderWriterFilter@5bf4dfb, org.springframework.web.filter.CorsFilter@5718e77c, org.springframework.security.web.authentication.logout.LogoutFilter@2b06681c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@746f8520, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@306bf4c3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3d667b59, org.springframework.security.web.access.ExceptionTranslationFilter@7852ab30]
2023-05-24 19:34:09,768 INFO org.apache.coyote.http11.Http11NioProtocol [main] Starting ProtocolHandler ["http-nio-8080"]
2023-05-24 19:34:09,789 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-05-24 19:34:09,799 INFO com.yuripe.batchType0A.BatchType0AApplication [main] Started BatchType0AApplication in 3.655 seconds (process running for 4.784)
2023-05-24 19:34:15,139 INFO org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-05-24 19:34:15,139 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8080-exec-2] Initializing Servlet 'dispatcherServlet'
2023-05-24 19:34:15,141 INFO org.springframework.web.servlet.DispatcherServlet [http-nio-8080-exec-2] Completed initialization in 2 ms
2023-05-24 19:34:15,322 INFO org.springframework.batch.core.launch.support.SimpleJobLauncher [http-nio-8080-exec-2] Job: [FlowJob: [name=importUserJob]] launched with the following parameters: [{'filePattern':'{value=FILE13.txt, type=class java.lang.String, identifying=true}'}]
2023-05-24 19:34:22,006 INFO org.springframework.batch.core.job.SimpleStepHandler [http-nio-8080-exec-2] Executing step: [step1]
2023-05-24 19:34:27,568 ERROR org.springframework.batch.core.step.AbstractStep [http-nio-8080-exec-2] Encountered an error executing step step1 in job importUserJob
org.springframework.batch.item.file.FlatFileParseException: The input has validation failed. Data is '{
	  "data": [{
	    "expireDate": "Wed Nov 02 00:00:00 CET 2022","effectiveDate": "Sat Dec 07 00:00:00 CET 2024","policyNumber": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa"
	  }]
}'
	at com.yuripe.batchType0A.Reader.SimpleReader.doRead(SimpleReader.java:25)
	at com.yuripe.batchType0A.Reader.SimpleReader.doRead(SimpleReader.java:1)
	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:95)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:137)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:124)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:702)
	at org.springframework.batch.item.file.FlatFileItemReader$$SpringCGLIB$$0.read(<generated>)
	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:110)
	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:189)
	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:137)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:362)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:206)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:139)
	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:129)
	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:389)
	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:313)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:256)
	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)
	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:362)
	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:206)
	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:139)
	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:241)
	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:227)
	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:153)
	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:68)
	at org.springframework.batch.core.job.flow.support.state.StepState.handle(StepState.java:68)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.resume(SimpleFlow.java:167)
	at org.springframework.batch.core.job.flow.support.SimpleFlow.start(SimpleFlow.java:142)
	at org.springframework.batch.core.job.flow.FlowJob.doExecute(FlowJob.java:137)
	at org.springframework.batch.core.job.AbstractJob.execute(AbstractJob.java:316)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher$1.run(SimpleJobLauncher.java:157)
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:50)
	at org.springframework.batch.core.launch.support.SimpleJobLauncher.run(SimpleJobLauncher.java:148)
	at org.springframework.batch.core.launch.support.TaskExecutorJobLauncher.run(TaskExecutorJobLauncher.java:70)
	at com.yuripe.batchType0A.Controller.BatchController.importFileAndRun(BatchController.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:563)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:631)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-24 19:34:31,730 INFO org.springframework.batch.core.step.AbstractStep [http-nio-8080-exec-2] Step: [step1] executed in 9s723ms
2023-05-24 19:34:34,924 INFO com.yuripe.batchType0A.Listener.JobFailureNotificationListener [http-nio-8080-exec-2] !!! JOB FAILED! Time to verify the results
2023-05-24 19:34:37,399 INFO org.springframework.batch.core.launch.support.SimpleJobLauncher [http-nio-8080-exec-2] Job: [FlowJob: [name=importUserJob]] completed with the following parameters: [{'filePattern':'{value=FILE13.txt, type=class java.lang.String, identifying=true}'}] and the following status: [FAILED] in 16s418ms
